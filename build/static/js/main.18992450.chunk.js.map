{"version":3,"sources":["utilities/config.js","components/MobileContainer.js","components/DesktopContainer.js","components/ResponsiveLayout.js","graphql/mutations/loginUser.js","hooks/index.js","components/LoginView.js","components/SensorView.js","graphql/queries/chatMessages.js","graphql/mutations/createMessage.js","graphql/subscriptions/messageAdded.js","components/ChatMessage.js","components/Loading.js","utilities/helperFuncs.js","components/ChatView.js","components/AboutView.js","components/SensorUrlForm.js","components/SettingsView.js","App.js","index.js"],"names":["config","wsUrl","httpUrl","MobileContainer","_ref","children","setPage","logOut","page","_useState","useState","_useState2","Object","slicedToArray","recentlyWatered","setRecentlyWatered","_useState3","_useState4","showSidebar","setShowSidebar","handleViewChange","view","react_default","a","createElement","Fragment","Responsive","maxWidth","onlyMobile","as","Sidebar","Pushable","style","height","Menu","animation","inverted","onHide","vertical","visible","icon","width","Item","onClick","Icon","name","disabled","console","log","setTimeout","Pusher","dimmed","widths","pointing","color","size","marginBottom","borderRadius","alignSelf","header","position","DesktopContainer","minWidth","onlyTablet","fixed","ResponsiveLayout","components_MobileContainer","components_DesktopContainer","loginUser","gql","_templateObject","useNotification","duration","arguments","length","undefined","text","setText","LoginView","setToken","login","useMutation","_useNotification","_useNotification2","notification","setNotification","username","setUsername","password","setPassword","handleLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","result","token","wrap","_context","prev","next","variables","sent","data","localStorage","setItem","JSON","stringify","t0","graphQLErrors","message","stop","apply","this","className","Grid","textAlign","background","verticalAlign","Column","Header","dividing","Form","onSubmit","Segment","stacked","raised","Input","type","value","onChange","_ref3","target","fluid","iconPosition","placeholder","_ref4","Button","Message","negative","SensorView","show","chatMessages","chatMessages_templateObject","createMessage","createMessage_templateObject","messageAdded","messageAdded_templateObject","ChatMessage","Comment","marginTop","paddingTop","margin","padding","compact","secondary","Content","Author","user","Metadata","Date","parseInt","created","toLocaleString","Divider","content","Loading","Dimmer","active","Loader","includedIn","set","object","map","p","id","includes","ChatView","_useQuery","useQuery","loading","messageInput","setMessageInput","el","useRef","useEffect","current","scrollIntoView","block","behavior","addMessage","handleSubmit","useSubscription","onSubscriptionData","client","subscriptionData","messageData","readQuery","query","addedMessage","messages","push","writeQuery","Container","overflowY","components_Loading","Group","components_ChatMessage","key","ref","onKeyPress","primary","AboutView","Table","SensorUrlForm","SettingsView","divided","Row","components_SensorUrlForm","App","parse","getItem","axios","get","then","response","components_ResponsiveLayout","removeItem","components_SensorView","components_ChatView","components_AboutView","components_SettingsView","components_LoginView","wslink","WebSocketLink","uri","options","reconnect","httpLink","createHttpLink","authLink","setContext","_","headers","objectSpread","authorization","concat","link","split","_getMainDefinition","getMainDefinition","kind","operation","ApolloClient","cache","InMemoryCache","ReactDOM","render","ApolloContext","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.18992450.chunk.js","sourcesContent":["let wsUrl = 'ws://localhost:4000/graphql'\nlet httpUrl = 'http://localhost:4000/graphql'\n\nif (process.env.NODE_ENV === 'production') {\n  wsUrl = 'wss://lit-forest-54340.herokuapp.com/graphql'\n  httpUrl = 'https://lit-forest-54340.herokuapp.com/graphql'\n}\n\nexport default { wsUrl, httpUrl }","// Libraries\nimport React, { useState } from 'react'\nimport { Responsive, Sidebar, Menu, Icon, Segment, Button } from 'semantic-ui-react'\n\nconst MobileContainer = ({ children, setPage, logOut, page }) => {\n  const [recentlyWatered, setRecentlyWatered] = useState(false)\n  const [showSidebar, setShowSidebar] = useState(false)\n\n  const handleViewChange = (view) => () => {\n    setShowSidebar(false)\n    setPage(view)\n  }\n\n  const handleWatering = () => {\n    setRecentlyWatered(true)\n    console.log('Watering plants plants')\n    setTimeout(() => {\n      setRecentlyWatered(false)\n      console.log('Watering completed')\n\n    }, 5000)\n  }\n\n  return (\n    <>\n      <Responsive\n        maxWidth={Responsive.onlyMobile.maxWidth}\n        as={Sidebar.Pushable}\n        style={{ height: '100vh' }}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          inverted\n          onHide={() => setShowSidebar(false)}\n          vertical\n          visible={showSidebar}\n          icon='labeled'\n          width='thin'\n        >\n          <Menu.Item onClick={handleViewChange('Sensors')}>\n            <Icon name='info' />\n            Sensors\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('Chat')}>\n            <Icon name='comments outline' />\n            Chat\n          </Menu.Item>\n          <Menu.Item disabled={recentlyWatered} onClick={handleWatering}>\n            <Icon name='exclamation' />\n            Water plants\n          </Menu.Item>\n          <Menu.Item onClick={() => console.log('Reboot rasp')\n          }>\n            <Icon name='redo' />\n            Reboot rasp\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('Settings')}>\n            <Icon name='settings' />\n            Settings\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('About')}>\n            <Icon name='question' />\n            About\n          </Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher style={{ height: '100%' }} dimmed={showSidebar}>\n\n            <Menu widths={3} inverted pointing color='green' size='large' style={{ height: '10%', marginBottom: 0, borderRadius: 0 }}>\n              <Menu.Item onClick={() => setShowSidebar(true)} style={{ alignSelf: 'center' }}>\n                <Icon name='sidebar' />\n              </Menu.Item>\n              <Menu.Item header={true}>\n                {page}\n              </Menu.Item>\n              <Menu.Item position='right' onClick={() => logOut(false)} style={{ alignSelf: 'center' }}>\n                <Icon name='logout' />\n              </Menu.Item>\n            </Menu>\n\n\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    </>\n  )\n}\n\nexport default MobileContainer","// Libraries\nimport React, { useState } from 'react'\nimport { Responsive, Menu, Icon } from 'semantic-ui-react'\n\nconst DesktopContainer = ({ children, setPage, logOut }) => {\n  const [recentlyWatered, setRecentlyWatered] = useState(false)\n\n  // Handles sidebar navigation\n  const handleViewChange = (view) => () => {\n    setPage(view)\n  }\n\n  const handleWatering = () => {\n    setRecentlyWatered(true)\n    console.log('Watering plants plants')\n    setTimeout(() => {\n      setRecentlyWatered(false)\n      console.log('Watering completed')\n      \n    }, 5000)\n\n  }\n\n  return (\n    <>\n      <Responsive\n        minWidth={Responsive.onlyTablet.minWidth}\n      >\n        <Menu\n          inverted\n          icon='labeled'\n          color='green'\n          fixed='top'\n        >\n          <Menu.Item onClick={handleViewChange('Sensors')}>\n            <Icon name='info' />\n            Sensors\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('Chat')}>\n            <Icon name='comments outline' />\n            Chat\n          </Menu.Item>\n          <Menu.Item disabled={recentlyWatered} onClick={handleWatering}>\n            <Icon name='exclamation' />\n            Water plants\n          </Menu.Item>\n          <Menu.Item onClick={() => console.log('Reboot rasp')}>\n            <Icon name='redo' />\n            Reboot rasp\n          </Menu.Item>\n          <Menu.Menu position='right'>\n          <Menu.Item onClick={handleViewChange('Settings')}>\n            <Icon name='settings' />\n            Settings\n          </Menu.Item>\n            <Menu.Item onClick={handleViewChange('About')}>\n              <Icon name='question' />\n              About\n          </Menu.Item>\n            <Menu.Item onClick={() => logOut(false)}>\n              <Icon name='log out' />\n              Log out\n          </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        <div style={{height: 71}}/>\n        {children}\n      </Responsive>\n    </>\n  )\n}\n\nexport default DesktopContainer","// Libraries\nimport React from 'react'\n\n// Components\nimport MobileContainer from './MobileContainer'\nimport DesktopContainer from './DesktopContainer'\n\nconst ResponsiveLayout = ({ children, setPage, logOut, page }) => {\n\n  return (\n    <>\n      <MobileContainer \n      logOut={logOut}\n      page={page}\n      setPage={setPage}>\n        {children}\n      </MobileContainer>\n\n      <DesktopContainer\n      logOut={logOut}\n      setPage={setPage}>\n        {children}\n      </DesktopContainer>\n    </>\n  )\n}\n\nexport default ResponsiveLayout","import { gql } from 'apollo-boost'\n\nconst loginUser = gql`\nmutation loginUser(\n  $password: String!\n  $username: String!\n  ) {\n  login(\n    password: $password\n    username: $username\n  ) {\n    value\n    username\n  }\n}\n`\n\nexport default loginUser","import { useState } from 'react'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n    reset\n  }\n}\n\n// Provide duration as argument (seconds)\nexport const useNotification = (duration = 5) => {\n  const [text, setText] = useState(null)\n\n  const reset = () => setText(null)\n\n  const set = (text) => {\n    setText(text)\n    setTimeout(() => {\n      reset()\n    }, duration * 1000)\n  }\n\n  return [text, set]\n}","// Libraries\nimport React, { useState } from 'react'\nimport { Message, Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\nimport { useMutation } from 'react-apollo-hooks'\nimport { gql } from 'apollo-boost'\n// Typedefs\nimport loginUser from '../graphql/mutations/loginUser'\n// Hooks\nimport { useNotification } from '../hooks/index'\n\n\nconst LoginView = ({ setToken }) => {\n  const login = useMutation(loginUser)\n  const [notification, setNotification] = useNotification()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async () => {\n    try {\n      const result = await login({\n        variables: {\n          username, password\n        }\n      })\n\n      const token = result.data.login\n      console.log('token', token)\n      setToken(token)\n      localStorage.setItem('kaste-user-token', JSON.stringify(token))\n\n    } catch (error) {\n      setNotification(error.graphQLErrors[0].message)\n    }\n  }\n\n  return (\n    <div className='login-form'>\n      <style> {`\n  body > div,\n  body > div > div,\n  body > div > div > div.login-form {\n    height: 100%;\n  }\n          `}\n      </style>\n      <Grid textAlign='center' style={{ height: '100%', background: 'lightgreen' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 250 }}>\n          <Header as='h1' color='grey' dividing textAlign='center'>\n            Log in to Kaste 2.0\n          </Header>\n          <Form size='large' onSubmit={handleLogin}>\n            <Segment stacked raised>\n              <Form.Input\n                type=\"text\"\n                value={username}\n                onChange={({ target }) => setUsername(target.value)}\n                fluid\n                icon='user'\n                iconPosition='left'\n                placeholder='Username'\n              />\n              <Form.Input\n                type=\"password\"\n                value={password}\n                onChange={({ target }) => setPassword(target.value)}\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n              />\n\n              <Button color='brown' size='large' type='submit'>\n                Log in\n              </Button>\n            </Segment>\n            {notification &&\n              <Message negative>\n                {notification}\n              </Message>\n            }\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\n\nexport default LoginView","// Libraries\nimport React from 'react'\n\nconst SensorView = ({ show }) => {\n\n  if (!show) {\n    return null\n  }\n\n  return (\n    <>\n      <p>SENSORVIEW 1</p>\n      <p>SENSORVIEW 2</p>\n      <p>SENSORVIEW 3</p>\n      <p>SENSORVIEW 4</p>\n    </>\n  )\n}\n\nexport default SensorView","import { gql } from 'apollo-boost'\n\nconst chatMessages = gql`\n{\n  messages {\n    content\n    created\n    id\n    user {\n      name\n    }\n  }\n}\n`\n\nexport default chatMessages","import { gql } from 'apollo-boost'\n\nconst createMessage = gql`\nmutation createMessage(\n  $content: String!\n  ) {\n  createMessage(\n    content: $content\n  ) {\n    content\n    user {\n      name\n    }\n    created\n    id\n  }\n}\n`\n\nexport default createMessage","import { gql } from 'apollo-boost'\n\nconst messageAdded = gql`\nsubscription {\n  messageAdded {\n    content\n    created\n    id\n    user {\n      name\n    }\n  }\n}\n`\n\nexport default messageAdded","// Libraries\nimport React from 'react'\nimport { Segment, Comment, Divider } from 'semantic-ui-react'\n\nconst ChatMessage = ({ message }) => (\n\n  <Comment style={{marginTop: 7, paddingTop: 7}}>\n    <Segment style={{ margin: '0 0 5px 0', padding: 7 }} compact inverted color='green' secondary>\n      <Comment.Content>\n        <Comment.Author style={{ color: 'darkgreen' }} as='a'>\n          {message.user.name}\n        </Comment.Author>\n        <Comment.Metadata>\n          <div>{new Date(parseInt(message.created)).toLocaleString()}</div>\n        </Comment.Metadata>\n        <Divider style={{ margin: '4px 0px 4px 0px' }} />\n        {message.content}\n      </Comment.Content>\n    </Segment>\n  </Comment>\n)\n\nexport default ChatMessage","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\nconst Loading = () => (\n    <Dimmer active inverted>\n      <Loader size='massive' inverted>Loading</Loader>\n    </Dimmer>\n)\n\nexport default Loading","export const includedIn = (set, object) =>\n  set.map(p => p.id).includes(object.id)\n\nexport default { includedIn }","// Libraries\nimport React, { useState, useRef, useEffect } from 'react'\nimport { useQuery, useMutation, useSubscription } from 'react-apollo-hooks'\nimport { Container, Button, Comment, Header, Menu, Input } from 'semantic-ui-react'\n// TypeDefs\nimport chatMessages from '../graphql/queries/chatMessages'\nimport createMessage from '../graphql/mutations/createMessage'\nimport messageAdded from '../graphql/subscriptions/messageAdded'\n// Components\nimport ChatMessage from './ChatMessage'\nimport Loading from './Loading'\n// Helper functions\nimport { includedIn } from '../utilities/helperFuncs'\n\nconst ChatView = ({ show }) => {\n  const { data, loading } = useQuery(chatMessages)\n  const [messageInput, setMessageInput] = useState('')\n  const el = useRef(null)\n\n  useEffect(() => {\n    if (!el.current) { return }\n    el.current.scrollIntoView({ block: 'end', behavior: 'smooth' })\n  })\n\n  const addMessage = useMutation(createMessage)\n\n  // eslint-disable-next-line no-unused-vars\n  const addedMessage = useSubscription(messageAdded, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      const messageData = client.readQuery({ query: chatMessages })\n      const addedMessage = subscriptionData.data.messageAdded\n\n      if (!includedIn(messageData.messages, addedMessage.id)) {\n        messageData.messages.push(addedMessage)\n\n        client.writeQuery({\n          query: chatMessages,\n          data: messageData,\n          id: 1\n        })\n      }\n    }\n  })\n\n  // Prevents empty messages\n  const handleSubmit = () => {\n    if (messageInput.length < 1) {\n      return\n    }\n\n    addMessage({\n      variables: {\n        \"content\": messageInput\n      }\n    })\n\n    setMessageInput('')\n  }\n\n  if (!show) {\n    return null\n  }\n\n  return (\n    <div style={{ height: '90%' }}>\n      <Container style={{ height: '90%', overflowY: 'scroll' }}>\n        {\n          loading\n            ?\n            <Loading />\n            :\n            <Comment.Group>\n              {data.messages.map(message => (\n                <ChatMessage\n                  key={message.id}\n                  message={message}\n                />\n              ))}\n            </Comment.Group>\n        }\n        <div id={'el'} ref={el}></div>\n      </Container>\n      <Menu fluid color='grey' style={{ marginBottom: 0, marginTop: 0, height: '10%' }}>\n        <Menu.Item style={{ width: '70%' }}>\n          <Input\n            fluid\n            value={messageInput}\n            onChange={({ target }) => setMessageInput(target.value)}\n            onKeyPress={({ key }) => {\n              if (key === 'Enter') {\n                handleSubmit()\n              }\n            }}\n          />\n        </Menu.Item>\n        <Menu.Item position='right'>\n          <Button primary type='submit' onClick={handleSubmit}>\n            Send\n        </Button>\n        </Menu.Item>\n      </Menu>\n    </div>\n  )\n}\n\nexport default ChatView\n","// Libraries\nimport React from 'react'\nimport { Table, Container, Header } from 'semantic-ui-react'\n\nconst AboutView = ({ show }) => {\n\n  if (!show) {\n    return null\n  }\n\n  return (\n    <Container textAlign='center'>\n      <Header as='h1' style={{ padding: 25 }}>\n        About Kaste 2.0\n      </Header>\n      <Table style={{ background: 'lightgreen' }}>\n        <tbody>\n          <tr>\n            <td>Aim:</td>\n            <td>Design and implement a responsive web app to monitor and water plants.</td>\n          </tr>\n          <tr>\n            <td>Features:</td>\n            <td>\n              <ul>\n                <li>Plantwatering functionality for two or more users</li>\n                <li>Possibility to read plant info through charts</li>\n                <li>Simple chat</li>\n                <li>Rebooting Raspberry (that controls sensor data)</li>\n              </ul>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\n\nexport default AboutView","import React from 'react'\nimport { Input, Segment, Header, Divider } from 'semantic-ui-react'\n\nconst SensorUrlForm = () => {\n\n  return (\n    <Segment>\n      <Header>\n        Sensor resource URL\n       </Header>\n       <Input />\n       <Divider />\n    </Segment>\n  )\n}\n\nexport default SensorUrlForm","// Libraries\nimport React from 'react'\nimport { Grid, Segment, Header } from 'semantic-ui-react'\n// Components\nimport SensorUrlForm from './SensorUrlForm'\n\nconst SettingsView = ({ show }) => {\n  if (!show) {\n    return null\n  }\n\n  return (\n    <Grid divided='vertically'>\n      <Grid.Row>\n        <Grid.Column>\n          <SensorUrlForm />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default SettingsView","// Libraries\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n// Components\nimport ResponsiveLayout from './components/ResponsiveLayout'\nimport LoginView from './components/LoginView'\nimport SensorView from './components/SensorView'\nimport ChatView from './components/ChatView'\nimport AboutView from './components/AboutView'\nimport SettingsView from './components/SettingsView'\n\nconst App = () => {\n  const [page, setPage] = useState('Settings')\n  const [token, setToken] = useState(JSON.parse(localStorage.getItem('kaste-user-token')))\n\n  useEffect(() => {\n    axios.get('http://86.115.57.126:8001/ws/pasila_sensors')\n      .then(response => console.log(response)\n      )\n  }, [])\n\n  const logOut = () => {\n    setToken(null)\n    localStorage.removeItem('kaste-user-token')\n  }\n\n  return (\n    <>\n      {!token\n        ?\n        <LoginView\n          setToken={setToken} />\n        :\n        <ResponsiveLayout\n          page={page}\n          setPage={setPage}\n          logOut={logOut}\n        >\n\n          <SensorView\n            show={page === 'Sensors'}\n          />\n\n          <ChatView\n            show={page === 'Chat'}\n          />\n\n          <AboutView\n            show={page === 'About'}\n          />\n\n          <SettingsView\n            show={page === 'Settings'}\n          />\n        </ResponsiveLayout>\n      }\n    </>\n  )\n}\n\nexport default App;\n\n","//Libraries\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloProvider } from 'react-apollo-hooks'\n// ...Because of authorization for headers (instead of apollo-boost)\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n// ...For Subscriptions (websocket)\nimport { split } from 'apollo-link'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { getMainDefinition } from 'apollo-utilities'\n// Utilities\nimport config from './utilities/config'\n// Components\nimport App from './App'\n\n// const wsUrl = 'wss://lit-forest-54340.herokuapp.com/graphql'\n// const httpUrl = 'https://lit-forest-54340.herokuapp.com/graphql'\n\nconst wslink = new WebSocketLink({\n  uri: config.wsUrl,\n  options: { reconnect: true }\n})\n\nconst httpLink = createHttpLink({\n  uri: config.httpUrl\n})\n\nconst authLink = setContext((_, { headers }) => {\n  const token = JSON.parse(localStorage.getItem('kaste-user-token'))\n  console.log('token', token)\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token.value}` : null\n    }\n  }\n})\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return kind === 'OperationDefinition' && operation === 'subscription'\n  },\n  wslink,\n  authLink.concat(httpLink),\n)\n\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n})\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n  , document.getElementById('root'))"],"sourceRoot":""}