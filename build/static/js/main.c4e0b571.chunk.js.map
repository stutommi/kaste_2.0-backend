{"version":3,"sources":["utilities/config.js","hooks/index.js","components/MobileContainer.js","components/DesktopContainer.js","components/ResponsiveLayout.js","graphql/mutations/loginUser.js","components/LoginView.js","components/SensorView.js","graphql/queries/chatMessages.js","graphql/mutations/createMessage.js","graphql/subscriptions/messageAdded.js","components/ChatMessage.js","components/Loading.js","utilities/helperFuncs.js","components/ChatView.js","components/AboutView.js","graphql/mutations/editUserSensorEndpoint.js","components/SensorUrlForm.js","components/SettingsView.js","App.js","index.js"],"names":["config","wsUrl","httpUrl","useNotification","duration","arguments","length","undefined","_useState3","useState","_useState4","Object","slicedToArray","text","setText","setTimeout","MobileContainer","_ref","children","setPage","logOut","page","_useState","_useState2","recentlyWatered","setRecentlyWatered","showSidebar","setShowSidebar","handleViewChange","view","react_default","a","createElement","Fragment","Responsive","maxWidth","onlyMobile","as","Sidebar","Pushable","style","height","Menu","animation","inverted","onHide","vertical","visible","icon","width","Item","onClick","Icon","name","disabled","console","log","Pusher","dimmed","widths","pointing","color","size","marginBottom","borderRadius","alignSelf","header","position","DesktopContainer","minWidth","onlyTablet","fixed","ResponsiveLayout","components_MobileContainer","components_DesktopContainer","loginUser","gql","_templateObject","LoginView","setToken","login","useMutation","_useNotification","_useNotification2","notification","setNotification","username","setUsername","password","setPassword","handleLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","result","token","wrap","_context","prev","next","variables","sent","data","localStorage","setItem","JSON","stringify","t0","graphQLErrors","message","stop","apply","this","className","Grid","textAlign","background","verticalAlign","Column","Header","dividing","Form","onSubmit","Segment","stacked","raised","Input","type","value","onChange","_ref3","target","fluid","iconPosition","placeholder","_ref4","Button","Message","negative","SensorView","show","chatMessages","chatMessages_templateObject","createMessage","createMessage_templateObject","messageAdded","messageAdded_templateObject","ChatMessage","Comment","marginTop","paddingTop","margin","padding","compact","secondary","Content","Author","user","Metadata","Date","parseInt","created","toLocaleString","Divider","content","Loading","Dimmer","active","Loader","includedIn","set","object","map","p","id","includes","ChatView","_useQuery","useQuery","loading","messageInput","setMessageInput","el","useRef","useEffect","scrollToBottom","addMessage","useSubscription","onSubscriptionData","client","subscriptionData","messageData","readQuery","query","addedMessage","messages","push","writeQuery","current","scrollIntoView","block","behavior","handleSubmit","Container","overflowY","components_Loading","Group","components_ChatMessage","key","ref","onKeyPress","onFocus","justifyContent","circular","AboutView","Table","editUserSensorEndpoint","editUserSensorEndpoint_templateObject","SensorUrlForm","sensorConnectedUrl","setSensorConnectedUrl","sensorUrlField","setSensorUrlField","editSensorEndpoint","handleConnect","response","prevToken","updatedToken","axios","get","keys","window","confirm","sensorEndpoint","parse","getItem","removeItem","objectSpread","action","SettingsView","divided","Row","components_SensorUrlForm","App","_useSensors","_useState5","_useState6","sensorData","setSensorData","_useState7","_useState8","isConnected","setIsConnected","error","setError","getSensorData","url","_x","setInterval","useSensors","_useSensors2","startFetchingSensors","components_ResponsiveLayout","components_SensorView","components_ChatView","components_AboutView","components_SettingsView","components_LoginView","wslink","WebSocketLink","uri","options","reconnect","httpLink","createHttpLink","authLink","setContext","_","headers","authorization","concat","link","split","_getMainDefinition","getMainDefinition","kind","operation","ApolloClient","cache","InMemoryCache","ReactDOM","render","ApolloContext","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c4e0b571.chunk.js","sourcesContent":["let wsUrl = 'ws://localhost:4000/graphql'\nlet httpUrl = 'http://localhost:4000/graphql'\n\nif (process.env.NODE_ENV === 'production') {\n  wsUrl = 'wss://lit-forest-54340.herokuapp.com/graphql'\n  httpUrl = 'https://lit-forest-54340.herokuapp.com/graphql'\n}\n\nexport default { wsUrl, httpUrl }","import axios from 'axios'\nimport { useState } from 'react'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n    reset\n  }\n}\n\n// Provide duration as argument (seconds)\nexport const useNotification = (duration = 5) => {\n  const [text, setText] = useState(null)\n\n  const reset = () => setText(null)\n\n  const set = (text) => {\n    setText(text)\n    setTimeout(() => {\n      reset()\n    }, duration * 1000)\n  }\n\n  return [text, set]\n}\n\n// Handle fetching sensorinformation\n// Provide duration as argument (seconds)\nexport const useSensors = (duration = 60) => {\n  const [sensorData, setSensorData] = useState(null)\n  const [isConnected, setIsConnected] = useState(false)\n  const [error, setError] = useNotification(null)\n\n  const getSensorData = async (url) => {\n    try {\n      const response = await axios.get(url)\n      console.log('response', response)\n      setSensorData(response.data)\n      setIsConnected(true)\n    } catch (error) {\n      setIsConnected(false)\n      setError(error)\n    }\n  }\n\n  const startFetching = (url) => {\n    console.log('fetching...')\n    getSensorData(url)\n    setInterval(() => {\n      console.log('fetching...')\n      getSensorData(url)\n    }, duration * 1000);\n  }\n\n  return [sensorData, startFetching, isConnected, error]\n}","// Libraries\nimport React, { useState } from 'react'\nimport { Responsive, Sidebar, Menu, Icon, Segment, Button } from 'semantic-ui-react'\n\nconst MobileContainer = ({ children, setPage, logOut, page }) => {\n  const [recentlyWatered, setRecentlyWatered] = useState(false)\n  const [showSidebar, setShowSidebar] = useState(false)\n\n  const handleViewChange = (view) => () => {\n    setShowSidebar(false)\n    setPage(view)\n  }\n\n  const handleWatering = () => {\n    setRecentlyWatered(true)\n    console.log('Watering plants plants')\n    setTimeout(() => {\n      setRecentlyWatered(false)\n      console.log('Watering completed')\n\n    }, 5000)\n  }\n\n  return (\n    <>\n      <Responsive\n        maxWidth={Responsive.onlyMobile.maxWidth}\n        as={Sidebar.Pushable}\n        style={{ height: '100vh' }}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          inverted\n          onHide={() => setShowSidebar(false)}\n          vertical\n          visible={showSidebar}\n          icon='labeled'\n          width='thin'\n        >\n          <Menu.Item onClick={handleViewChange('Sensors')}>\n            <Icon name='info' />\n            Sensors\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('Chat')}>\n            <Icon name='comments outline' />\n            Chat\n          </Menu.Item>\n          <Menu.Item disabled={recentlyWatered} onClick={handleWatering}>\n            <Icon name='exclamation' />\n            Water plants\n          </Menu.Item>\n          <Menu.Item onClick={() => console.log('Reboot rasp')\n          }>\n            <Icon name='redo' />\n            Reboot rasp\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('Settings')}>\n            <Icon name='settings' />\n            Settings\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('About')}>\n            <Icon name='question' />\n            About\n          </Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher style={{ height: '100%' }} dimmed={showSidebar}>\n\n            <Menu widths={3} inverted pointing color='green' size='large' style={{ height: '10%', marginBottom: 0, borderRadius: 0 }}>\n              <Menu.Item onClick={() => setShowSidebar(true)} style={{ alignSelf: 'center' }}>\n                <Icon name='sidebar' />\n              </Menu.Item>\n              <Menu.Item header={true}>\n                {page}\n              </Menu.Item>\n              <Menu.Item position='right' onClick={() => logOut(false)} style={{ alignSelf: 'center' }}>\n                <Icon name='log out' />\n              </Menu.Item>\n            </Menu>\n\n\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    </>\n  )\n}\n\nexport default MobileContainer","// Libraries\nimport React, { useState } from 'react'\nimport { Responsive, Menu, Icon } from 'semantic-ui-react'\n\nconst DesktopContainer = ({ children, setPage, logOut }) => {\n  const [recentlyWatered, setRecentlyWatered] = useState(false)\n\n  // Handles sidebar navigation\n  const handleViewChange = (view) => () => {\n    setPage(view)\n  }\n\n  const handleWatering = () => {\n    setRecentlyWatered(true)\n    console.log('Watering plants plants')\n    setTimeout(() => {\n      setRecentlyWatered(false)\n      console.log('Watering completed')\n      \n    }, 5000)\n\n  }\n\n  return (\n    <>\n      <Responsive\n        minWidth={Responsive.onlyTablet.minWidth}\n      >\n        <Menu\n          inverted\n          icon='labeled'\n          color='green'\n          fixed='top'\n        >\n          <Menu.Item onClick={handleViewChange('Sensors')}>\n            <Icon name='info' />\n            Sensors\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('Chat')}>\n            <Icon name='comments outline' />\n            Chat\n          </Menu.Item>\n          <Menu.Item disabled={recentlyWatered} onClick={handleWatering}>\n            <Icon name='exclamation' />\n            Water plants\n          </Menu.Item>\n          <Menu.Item onClick={() => console.log('Reboot rasp')}>\n            <Icon name='redo' />\n            Reboot rasp\n          </Menu.Item>\n          <Menu.Menu position='right'>\n          <Menu.Item onClick={handleViewChange('Settings')}>\n            <Icon name='settings' />\n            Settings\n          </Menu.Item>\n            <Menu.Item onClick={handleViewChange('About')}>\n              <Icon name='question' />\n              About\n          </Menu.Item>\n            <Menu.Item onClick={() => logOut(false)}>\n              <Icon name='log out' />\n              Log out\n          </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        <div style={{height: 71}}/>\n        {children}\n      </Responsive>\n    </>\n  )\n}\n\nexport default DesktopContainer","// Libraries\nimport React from 'react'\n\n// Components\nimport MobileContainer from './MobileContainer'\nimport DesktopContainer from './DesktopContainer'\n\nconst ResponsiveLayout = ({ children, setPage, logOut, page }) => {\n\n  return (\n    <>\n      <MobileContainer \n      logOut={logOut}\n      page={page}\n      setPage={setPage}>\n        {children}\n      </MobileContainer>\n\n      <DesktopContainer\n      logOut={logOut}\n      setPage={setPage}>\n        {children}\n      </DesktopContainer>\n    </>\n  )\n}\n\nexport default ResponsiveLayout","import { gql } from 'apollo-boost'\n\nconst loginUser = gql`\nmutation loginUser(\n  $password: String!\n  $username: String!\n  ) {\n  login(\n    password: $password\n    username: $username\n  ) {\n    value\n    username\n    sensorEndpoint\n  }\n}\n`\n\nexport default loginUser","// Libraries\nimport React, { useState } from 'react'\nimport { Message, Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\nimport { useMutation } from 'react-apollo-hooks'\n// Typedefs\nimport loginUser from '../graphql/mutations/loginUser'\n// Hooks\nimport { useNotification } from '../hooks/index'\n\n\nconst LoginView = ({ setToken }) => {\n  const login = useMutation(loginUser)\n  const [notification, setNotification] = useNotification()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async () => {\n    try {\n      const result = await login({\n        variables: {\n          username, password\n        }\n      })\n\n      const token = result.data.login\n      console.log('token', token)\n      setToken(token)\n      localStorage.setItem('kaste-user-token', JSON.stringify(token))\n\n    } catch (error) {\n      setNotification(error.graphQLErrors[0].message)\n    }\n  }\n\n  return (\n    <div className='login-form'>\n      <style> {`\n  body > div,\n  body > div > div,\n  body > div > div > div.login-form {\n    height: 100%;\n  }\n          `}\n      </style>\n      <Grid textAlign='center' style={{ height: '100%', background: 'lightgreen' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 250 }}>\n          <Header as='h1' color='grey' dividing textAlign='center'>\n            Log in to Kaste 2.0\n          </Header>\n          <Form size='large' onSubmit={handleLogin}>\n            <Segment stacked raised>\n              <Form.Input\n                type=\"text\"\n                value={username}\n                onChange={({ target }) => setUsername(target.value)}\n                fluid\n                icon='user'\n                iconPosition='left'\n                placeholder='Username'\n              />\n              <Form.Input\n                type=\"password\"\n                value={password}\n                onChange={({ target }) => setPassword(target.value)}\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n              />\n\n              <Button color='brown' size='large' type='submit'>\n                Log in\n              </Button>\n            </Segment>\n            {notification &&\n              <Message negative>\n                {notification}\n              </Message>\n            }\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\n\nexport default LoginView","// Libraries\nimport React from 'react'\n\nconst SensorView = ({ show }) => {\n\n  if (!show) {\n    return null\n  }\n\n  return (\n    <>\n      <p>SENSORVIEW 1</p>\n      <p>SENSORVIEW 2</p>\n      <p>SENSORVIEW 3</p>\n      <p>SENSORVIEW 4</p>\n    </>\n  )\n}\n\nexport default SensorView","import { gql } from 'apollo-boost'\n\nconst chatMessages = gql`\n{\n  messages {\n    content\n    created\n    id\n    user {\n      name\n    }\n  }\n}\n`\n\nexport default chatMessages","import { gql } from 'apollo-boost'\n\nconst createMessage = gql`\nmutation createMessage(\n  $content: String!\n  ) {\n  createMessage(\n    content: $content\n  ) {\n    content\n    user {\n      name\n    }\n    created\n    id\n  }\n}\n`\n\nexport default createMessage","import { gql } from 'apollo-boost'\n\nconst messageAdded = gql`\nsubscription {\n  messageAdded {\n    content\n    created\n    id\n    user {\n      name\n    }\n  }\n}\n`\n\nexport default messageAdded","// Libraries\nimport React from 'react'\nimport { Segment, Comment, Divider } from 'semantic-ui-react'\n\nconst ChatMessage = ({ message }) => (\n\n  <Comment style={{marginTop: 7, paddingTop: 7}}>\n    <Segment style={{ margin: '0 0 5px 0', padding: 7 }} compact inverted color='green' secondary>\n      <Comment.Content>\n        <Comment.Author style={{ color: 'darkgreen' }} as='a'>\n          {message.user.name}\n        </Comment.Author>\n        <Comment.Metadata>\n          <div>{new Date(parseInt(message.created)).toLocaleString()}</div>\n        </Comment.Metadata>\n        <Divider style={{ margin: '4px 0px 4px 0px' }} />\n        {message.content}\n      </Comment.Content>\n    </Segment>\n  </Comment>\n)\n\nexport default ChatMessage","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\nconst Loading = () => (\n    <Dimmer active inverted>\n      <Loader size='massive' inverted>Loading</Loader>\n    </Dimmer>\n)\n\nexport default Loading","export const includedIn = (set, object) =>\n  set.map(p => p.id).includes(object.id)\n\nexport default { includedIn }","// Libraries\nimport React, { useState, useRef, useEffect } from 'react'\nimport { useQuery, useMutation, useSubscription } from 'react-apollo-hooks'\nimport { Container, Icon, Comment, Menu, Input } from 'semantic-ui-react'\n// TypeDefs\nimport chatMessages from '../graphql/queries/chatMessages'\nimport createMessage from '../graphql/mutations/createMessage'\nimport messageAdded from '../graphql/subscriptions/messageAdded'\n// Components\nimport ChatMessage from './ChatMessage'\nimport Loading from './Loading'\n// Helper functions\nimport { includedIn } from '../utilities/helperFuncs'\n\nconst ChatView = ({ show }) => {\n  const { data, loading } = useQuery(chatMessages)\n  const [messageInput, setMessageInput] = useState('')\n  const el = useRef(null)\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [show])\n\n  const addMessage = useMutation(createMessage)\n\n  // eslint-disable-next-line no-unused-vars\n  const addedMessage = useSubscription(messageAdded, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      const messageData = client.readQuery({ query: chatMessages })\n      const addedMessage = subscriptionData.data.messageAdded\n\n      if (!includedIn(messageData.messages, addedMessage.id)) {\n        messageData.messages.push(addedMessage)\n\n        client.writeQuery({\n          query: chatMessages,\n          data: messageData,\n          id: 1\n        })\n        el.current.scrollIntoView({ block: 'end', behavior: 'smooth' })\n      }\n    }\n  })\n\n  const scrollToBottom = () => {\n    if (!el.current) { return }\n    el.current.scrollIntoView({ block: 'end', behavior: 'smooth' })\n  }\n\n  const handleSubmit = () => {\n    // Prevents empty messages\n    if (messageInput.length < 1) {\n      return\n    }\n\n    addMessage({\n      variables: {\n        \"content\": messageInput\n      }\n    })\n    setMessageInput('')\n  }\n\n  if (!show) {\n    return null\n  }\n\n  return (\n    <div style={{ height: '90%' }}>\n      <Container style={{ height: '90%', overflowY: 'scroll' }}>\n        {\n          loading\n            ?\n            <Loading />\n            :\n            <Comment.Group>\n              {data.messages.map(message => (\n                <ChatMessage\n                  key={message.id}\n                  message={message}\n                />\n              ))}\n            </Comment.Group>\n        }\n        <div id={'el'} ref={el}></div>\n      </Container>\n      <Menu fluid color='grey' style={{ marginBottom: 0, marginTop: 0, height: '10%' }}>\n        <Menu.Item style={{ width: '80vw' }}>\n          <Input\n            fluid\n            value={messageInput}\n            onChange={({ target }) => setMessageInput(target.value)}\n            onKeyPress={({ key }) => {\n              if (key === 'Enter') {\n                handleSubmit()\n              }\n            }}\n            onFocus={scrollToBottom}\n          />\n        </Menu.Item>\n        <Menu.Item\n          style={{ width: '20vw', justifyContent: 'center' }}\n          onClick={handleSubmit}>\n          <Icon\n            name='send'\n            inverted\n            circular\n            color='green' />\n        </Menu.Item>\n      </Menu>\n    </div>\n  )\n}\n\nexport default ChatView\n","// Libraries\nimport React from 'react'\nimport { Table, Container, Header } from 'semantic-ui-react'\n\nconst AboutView = ({ show }) => {\n\n  if (!show) {\n    return null\n  }\n\n  return (\n    <Container textAlign='center'>\n      <Header as='h1' style={{ padding: 25 }}>\n        About Kaste 2.0\n      </Header>\n      <Table style={{ background: 'lightgreen' }}>\n        <tbody>\n          <tr>\n            <td>Aim:</td>\n            <td>Design and implement a responsive web app to monitor and water plants.</td>\n          </tr>\n          <tr>\n            <td>Features:</td>\n            <td>\n              <ul>\n                <li>Plantwatering functionality for two or more users</li>\n                <li>Possibility to read plant info through charts</li>\n                <li>Simple chat</li>\n                <li>Rebooting Raspberry (that controls sensor data)</li>\n              </ul>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\n\nexport default AboutView","import { gql } from 'apollo-boost'\n\nconst editUserSensorEndpoint = gql`\nmutation editUserSensorEndpoint(\n  $sensorEndpoint: String!\n  ) {\n    editUserSensorEndpoint(\n    sensorEndpoint: $sensorEndpoint\n  ) {\n    sensorEndpoint\n    name\n    username\n  }\n}\n`\n\nexport default editUserSensorEndpoint","// Libraries\nimport React, { useState } from 'react'\nimport { Button, Input, Segment, Header, Divider, Message } from 'semantic-ui-react'\nimport axios from 'axios'\nimport { useMutation } from 'react-apollo-hooks'\n// Custom hooks\nimport { useNotification } from '../hooks/index'\n// TypeDefs\nimport editUserSensorEndpoint from '../graphql/mutations/editUserSensorEndpoint'\n\nconst SensorUrlForm = () => {\n  const [sensorConnectedUrl, setSensorConnectedUrl] = useState(null)\n  const [sensorUrlField, setSensorUrlField] = useState('')\n  const [notification, setNotification] = useNotification()\n  const editSensorEndpoint = useMutation(editUserSensorEndpoint)\n\n  const handleConnect = async () => {\n    try {\n      const response = await axios.get(sensorUrlField)\n      const validUrl = Object.keys(response.data).includes('sensors')\n\n      if (validUrl) {\n        const confirmation = window.confirm('Would you like to receive information about these sensors?')\n\n        if (confirmation) {\n          editSensorEndpoint({\n            variables: {\n              sensorEndpoint: sensorUrlField\n            }\n          })\n          setSensorConnectedUrl(sensorUrlField)\n\n          // Sets new url endpoint to localstorage\n          const prevToken = JSON.parse(localStorage.getItem('kaste-user-token'))\n          localStorage.removeItem('kaste-user-token')\n          const updatedToken = {\n            ...prevToken,\n            sensorEndpoint: sensorUrlField\n          }\n          window.localStorage.setItem('kaste-user-token', JSON.stringify(updatedToken))\n          setSensorUrlField('')\n        }\n      }\n    } catch (error) {\n      setNotification(error.message)\n    }\n\n\n  }\n\n  return (\n    <Segment>\n      <Header>\n        Sensor resource URL\n       </Header>\n      <small style={{ color: 'gray' }}>\n        Provide an endpoint URL where sensor output comes from\n       </small>\n      <Input\n        value={sensorUrlField}\n        onChange={({ target }) => setSensorUrlField(target.value)}\n        fluid\n        placeholder='Enter URL...'\n        action={\n          <Button loading={false} onClick={handleConnect}>connect</Button>\n        }\n      />\n      {\n        sensorConnectedUrl\n          ?\n          <Segment color={'green'}>\n            connected at: <br />\n            {sensorConnectedUrl}\n          </Segment>\n          :\n          <Segment color={'red'}>\n            not connected\n          </Segment>\n      }\n      <Divider />\n      {notification &&\n        <Message color='red'>\n          {notification}\n        </Message>\n      }\n    </Segment>\n  )\n}\n\nexport default SensorUrlForm","// Libraries\nimport React from 'react'\nimport { Grid } from 'semantic-ui-react'\n// Components\nimport SensorUrlForm from './SensorUrlForm'\n\nconst SettingsView = ({ show }) => {\n  if (!show) {\n    return null\n  }\n\n  return (\n    <Grid divided='vertically'>\n      <Grid.Row>\n        <Grid.Column>\n          <SensorUrlForm />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default SettingsView","// Libraries\nimport React, { useState, useEffect } from 'react'\n// Custom hooks\nimport { useSensors } from './hooks/index'\n// Components\nimport ResponsiveLayout from './components/ResponsiveLayout'\nimport LoginView from './components/LoginView'\nimport SensorView from './components/SensorView'\nimport ChatView from './components/ChatView'\nimport AboutView from './components/AboutView'\nimport SettingsView from './components/SettingsView'\n\nconst App = () => {\n  const [page, setPage] = useState('Settings')\n  const [token, setToken] = useState(JSON.parse(localStorage.getItem('kaste-user-token')))\n  const [sensorData, startFetchingSensors, sensorsConnected, sensorError] = useSensors(60)\n\n  useEffect(() => {\n    if (token.sensorEndpoint) {\n      startFetchingSensors(token.sensorEndpoint)\n    }\n  }, [token])\n\n  const logOut = () => {\n    setToken(null)\n    localStorage.removeItem('kaste-user-token')\n  }\n\n  return (\n    <>\n      {!token\n        ?\n        <LoginView\n          setToken={setToken} />\n        :\n        <ResponsiveLayout\n          page={page}\n          setPage={setPage}\n          logOut={logOut}\n        >\n\n          <SensorView\n            show={page === 'Sensors'}\n          />\n\n          <ChatView\n            show={page === 'Chat'}\n          />\n\n          <AboutView\n            show={page === 'About'}\n          />\n\n          <SettingsView\n            show={page === 'Settings'}\n\n          />\n        </ResponsiveLayout>\n      }\n    </>\n  )\n}\n\nexport default App;\n\n","//Libraries\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloProvider } from 'react-apollo-hooks'\n// ...Because of authorization for headers (instead of apollo-boost)\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n// ...For Subscriptions (websocket)\nimport { split } from 'apollo-link'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { getMainDefinition } from 'apollo-utilities'\n// Utilities\nimport config from './utilities/config'\n// Components\nimport App from './App'\n\nconst wslink = new WebSocketLink({\n  uri: config.wsUrl,\n  options: { reconnect: true }\n})\n\nconst httpLink = createHttpLink({\n  uri: config.httpUrl\n})\n\nconst authLink = setContext((_, { headers }) => {\n  const token = JSON.parse(localStorage.getItem('kaste-user-token'))\n  console.log('token', token)\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token.value}` : null\n    }\n  }\n})\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return kind === 'OperationDefinition' && operation === 'subscription'\n  },\n  wslink,\n  authLink.concat(httpLink),\n)\n\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n})\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n  , document.getElementById('root'))"],"sourceRoot":""}