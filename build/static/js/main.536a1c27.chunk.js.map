{"version":3,"sources":["utilities/config.js","utilities/helperFuncs.js","hooks/index.js","components/MobileContainer.js","components/DesktopContainer.js","components/ResponsiveLayout.js","graphql/mutations/loginUser.js","components/LoginView.js","components/SensorValue.js","components/PlantSensor.js","components/HouseSensor.js","components/SensorView.js","graphql/queries/chatMessages.js","graphql/mutations/createMessage.js","graphql/subscriptions/messageAdded.js","components/ChatMessage.js","components/Loading.js","components/ChatView.js","components/AboutView.js","graphql/mutations/editUserSensorEndpoint.js","components/SensorUrlForm.js","components/SettingsView.js","App.js","index.js"],"names":["config","wsUrl","httpUrl","includedIn","set","object","map","p","id","includes","formatSensorData","sensorData","Object","values","reduce","acc","cur","concat","useNotification","duration","arguments","length","undefined","_useState3","useState","_useState4","slicedToArray","text","setText","setTimeout","MobileContainer","_ref","children","setPage","logOut","page","_useState","_useState2","recentlyWatered","setRecentlyWatered","showSidebar","setShowSidebar","handleViewChange","view","react_default","a","createElement","Fragment","Responsive","maxWidth","onlyMobile","as","Sidebar","Pushable","style","height","Menu","animation","inverted","onHide","vertical","visible","icon","width","Item","onClick","Icon","name","disabled","console","log","Pusher","dimmed","widths","pointing","color","size","marginBottom","borderRadius","alignSelf","header","position","DesktopContainer","minWidth","onlyTablet","fixed","ResponsiveLayout","components_MobileContainer","components_DesktopContainer","loginUser","gql","_templateObject","LoginView","setToken","login","useMutation","_useNotification","_useNotification2","notification","setNotification","username","setUsername","password","setPassword","handleLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","result","token","wrap","_context","prev","next","variables","sent","data","localStorage","setItem","JSON","stringify","t0","graphQLErrors","message","stop","apply","this","className","Grid","textAlign","background","verticalAlign","Column","Header","dividing","Form","onSubmit","Segment","stacked","raised","Input","type","value","onChange","_ref3","target","fluid","iconPosition","placeholder","_ref4","Button","Message","negative","SensorValue","label","PlantSensor","sensor","secondary","margin","components_SensorValue","model","location","nutrient","light","temperature_C","soil_moisture","time","battery_low","HouseSensor","humidity","SensorView","show","useEffect","overflow","marginTop","components_PlantSensor","key","components_HouseSensor","chatMessages","chatMessages_templateObject","createMessage","createMessage_templateObject","messageAdded","messageAdded_templateObject","ChatMessage","Comment","paddingTop","padding","compact","Content","Author","user","Metadata","Date","parseInt","created","toLocaleString","Divider","content","Loading","Dimmer","active","Loader","ChatView","_useQuery","useQuery","loading","messageInput","setMessageInput","el","useRef","scrollToBottom","addMessage","useSubscription","onSubscriptionData","client","subscriptionData","messageData","readQuery","query","addedMessage","messages","push","writeQuery","current","scrollIntoView","block","behavior","handleSubmit","Container","overflowY","components_Loading","Group","components_ChatMessage","ref","onKeyPress","onFocus","justifyContent","circular","AboutView","Table","editUserSensorEndpoint","editUserSensorEndpoint_templateObject","SensorUrlForm","sensorsConnected","setSensorConnectedUrl","sensorUrlField","setSensorUrlField","editSensorEndpoint","handleConnect","response","prevToken","updatedToken","axios","get","keys","window","confirm","sensorEndpoint","parse","getItem","removeItem","objectSpread","action","SettingsView","divided","Row","components_SensorUrlForm","App","_useSensors","_useState5","_useState6","setSensorData","_useState7","_useState8","actions","setActions","_useState9","_useState10","isConnected","setIsConnected","error","setError","getSensorData","url","sensors","_x","setInterval","useSensors","_useSensors2","startFetchingSensors","components_ResponsiveLayout","components_SensorView","components_ChatView","components_AboutView","components_SettingsView","components_LoginView","wslink","WebSocketLink","uri","options","reconnect","httpLink","createHttpLink","authLink","setContext","_","headers","authorization","link","split","_getMainDefinition","getMainDefinition","kind","operation","ApolloClient","cache","InMemoryCache","ReactDOM","render","ApolloContext","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.536a1c27.chunk.js","sourcesContent":["let wsUrl = 'ws://localhost:4000/graphql'\nlet httpUrl = 'http://localhost:4000/graphql'\n\nif (process.env.NODE_ENV === 'production') {\n  wsUrl = 'wss://lit-forest-54340.herokuapp.com/graphql'\n  httpUrl = 'https://lit-forest-54340.herokuapp.com/graphql'\n}\n\nexport default { wsUrl, httpUrl }","export const includedIn = (set, object) =>\n  set.map(p => p.id).includes(object.id)\n\n// Sensor data comes in two objects. they need to be mergedinto one one array\nexport const formatSensorData = (sensorData) => {\n  const values = Object.values(sensorData)\n  const flattenedArray = values.reduce((acc, cur) => cur.concat(acc))\n  return flattenedArray\n}\n\nexport default { includedIn, formatSensorData }","import axios from 'axios'\nimport { useState, useEffect } from 'react'\n// Helper functions\nimport { formatSensorData } from '../utilities/helperFuncs'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n    reset\n  }\n}\n\n// Provide duration as argument (seconds)\nexport const useNotification = (duration = 5) => {\n  const [text, setText] = useState(null)\n\n  const reset = () => setText(null)\n\n  const set = (text) => {\n    setText(text)\n    setTimeout(() => {\n      reset()\n    }, duration * 1000)\n  }\n\n  return [text, set]\n}\n\n// Handle fetching sensorinformation\n// Provide duration as argument (seconds)\nexport const useSensors = (duration = 60) => {\n  const [sensorData, setSensorData] = useState(null)\n  const [actions, setActions] = useState(null)\n  const [isConnected, setIsConnected] = useState(false)\n  const [error, setError] = useNotification(null)\n\n  const getSensorData = async (url) => {\n    try {\n      const response = await axios.get(url)\n\n      // Format sensor data with helper function\n      setSensorData(formatSensorData(response.data.sensors))\n      // get actions\n      setActions(response.data.actions)\n      setIsConnected(true)\n    } catch (error) {\n      setIsConnected(false)\n      setError(error)\n    }\n  }\n\n  const startFetching = (url) => {\n    console.log('fetching...')\n    getSensorData(url)\n    setInterval(() => {\n      console.log('fetching...')\n      getSensorData(url)\n    }, duration * 1000);\n  }\n\n\n  return [sensorData, actions, startFetching, isConnected, error]\n}","// Libraries\nimport React, { useState } from 'react'\nimport { Responsive, Sidebar, Menu, Icon, Segment, Button } from 'semantic-ui-react'\n\nconst MobileContainer = ({ children, setPage, logOut, page }) => {\n  const [recentlyWatered, setRecentlyWatered] = useState(false)\n  const [showSidebar, setShowSidebar] = useState(false)\n\n  const handleViewChange = (view) => () => {\n    setShowSidebar(false)\n    setPage(view)\n  }\n\n  const handleWatering = () => {\n    setRecentlyWatered(true)\n    console.log('Watering plants plants')\n    setTimeout(() => {\n      setRecentlyWatered(false)\n      console.log('Watering completed')\n\n    }, 5000)\n  }\n\n  return (\n    <>\n      <Responsive\n        maxWidth={Responsive.onlyMobile.maxWidth}\n        as={Sidebar.Pushable}\n        style={{ height: '100vh' }}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          inverted\n          onHide={() => setShowSidebar(false)}\n          vertical\n          visible={showSidebar}\n          icon='labeled'\n          width='thin'\n        >\n          <Menu.Item onClick={handleViewChange('Sensors')}>\n            <Icon name='info' />\n            Sensors\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('Chat')}>\n            <Icon name='comments outline' />\n            Chat\n          </Menu.Item>\n          <Menu.Item disabled={recentlyWatered} onClick={handleWatering}>\n            <Icon name='exclamation' />\n            Water plants\n          </Menu.Item>\n          <Menu.Item onClick={() => console.log('Reboot rasp')\n          }>\n            <Icon name='redo' />\n            Reboot rasp\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('Settings')}>\n            <Icon name='settings' />\n            Settings\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('About')}>\n            <Icon name='question' />\n            About\n          </Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher style={{ height: '100%' }} dimmed={showSidebar}>\n\n            <Menu widths={3} inverted pointing color='green' size='large' style={{ height: '10%', marginBottom: 0, borderRadius: 0 }}>\n              <Menu.Item onClick={() => setShowSidebar(true)} style={{ alignSelf: 'center' }}>\n                <Icon name='sidebar' />\n              </Menu.Item>\n              <Menu.Item header={true}>\n                {page}\n              </Menu.Item>\n              <Menu.Item position='right' onClick={() => logOut(false)} style={{ alignSelf: 'center' }}>\n                <Icon name='log out' />\n              </Menu.Item>\n            </Menu>\n\n\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    </>\n  )\n}\n\nexport default MobileContainer","// Libraries\nimport React, { useState } from 'react'\nimport { Responsive, Menu, Icon } from 'semantic-ui-react'\n\nconst DesktopContainer = ({ children, setPage, logOut }) => {\n  const [recentlyWatered, setRecentlyWatered] = useState(false)\n\n  // Handles sidebar navigation\n  const handleViewChange = (view) => () => {\n    setPage(view)\n  }\n\n  const handleWatering = () => {\n    setRecentlyWatered(true)\n    console.log('Watering plants plants')\n    setTimeout(() => {\n      setRecentlyWatered(false)\n      console.log('Watering completed')\n      \n    }, 5000)\n\n  }\n\n  return (\n    <>\n      <Responsive\n        minWidth={Responsive.onlyTablet.minWidth}\n      >\n        <Menu\n          inverted\n          icon='labeled'\n          color='green'\n          fixed='top'\n        >\n          <Menu.Item onClick={handleViewChange('Sensors')}>\n            <Icon name='info' />\n            Sensors\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('Chat')}>\n            <Icon name='comments outline' />\n            Chat\n          </Menu.Item>\n          <Menu.Item disabled={recentlyWatered} onClick={handleWatering}>\n            <Icon name='exclamation' />\n            Water plants\n          </Menu.Item>\n          <Menu.Item onClick={() => console.log('Reboot rasp')}>\n            <Icon name='redo' />\n            Reboot rasp\n          </Menu.Item>\n          <Menu.Menu position='right'>\n          <Menu.Item onClick={handleViewChange('Settings')}>\n            <Icon name='settings' />\n            Settings\n          </Menu.Item>\n            <Menu.Item onClick={handleViewChange('About')}>\n              <Icon name='question' />\n              About\n          </Menu.Item>\n            <Menu.Item onClick={() => logOut(false)}>\n              <Icon name='log out' />\n              Log out\n          </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        <div style={{height: 71}}/>\n        {children}\n      </Responsive>\n    </>\n  )\n}\n\nexport default DesktopContainer","// Libraries\nimport React from 'react'\n\n// Components\nimport MobileContainer from './MobileContainer'\nimport DesktopContainer from './DesktopContainer'\n\nconst ResponsiveLayout = ({ children, setPage, logOut, page }) => {\n\n  return (\n    <>\n      <MobileContainer \n      logOut={logOut}\n      page={page}\n      setPage={setPage}>\n        {children}\n      </MobileContainer>\n\n      <DesktopContainer\n      logOut={logOut}\n      setPage={setPage}>\n        {children}\n      </DesktopContainer>\n    </>\n  )\n}\n\nexport default ResponsiveLayout","import { gql } from 'apollo-boost'\n\nconst loginUser = gql`\nmutation loginUser(\n  $password: String!\n  $username: String!\n  ) {\n  login(\n    password: $password\n    username: $username\n  ) {\n    value\n    username\n    sensorEndpoint\n  }\n}\n`\n\nexport default loginUser","// Libraries\nimport React, { useState } from 'react'\nimport { Message, Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\nimport { useMutation } from 'react-apollo-hooks'\n// Typedefs\nimport loginUser from '../graphql/mutations/loginUser'\n// Hooks\nimport { useNotification } from '../hooks/index'\n\n\nconst LoginView = ({ setToken }) => {\n  const login = useMutation(loginUser)\n  const [notification, setNotification] = useNotification()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async () => {\n    try {\n      const result = await login({\n        variables: {\n          username, password\n        }\n      })\n\n      const token = result.data.login\n      console.log('token', token)\n      setToken(token)\n      localStorage.setItem('kaste-user-token', JSON.stringify(token))\n\n    } catch (error) {\n      setNotification(error.graphQLErrors[0].message)\n    }\n  }\n\n  return (\n    <div className='login-form'>\n      <style> {`\n  body > div,\n  body > div > div,\n  body > div > div > div.login-form {\n    height: 100%;\n  }\n          `}\n      </style>\n      <Grid textAlign='center' style={{ height: '100%', background: 'lightgreen' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 250 }}>\n          <Header as='h1' color='grey' dividing textAlign='center'>\n            Log in to Kaste 2.0\n          </Header>\n          <Form size='large' onSubmit={handleLogin}>\n            <Segment stacked raised>\n              <Form.Input\n                type=\"text\"\n                value={username}\n                onChange={({ target }) => setUsername(target.value)}\n                fluid\n                icon='user'\n                iconPosition='left'\n                placeholder='Username'\n              />\n              <Form.Input\n                type=\"password\"\n                value={password}\n                onChange={({ target }) => setPassword(target.value)}\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n              />\n\n              <Button color='brown' size='large' type='submit'>\n                Log in\n              </Button>\n            </Segment>\n            {notification &&\n              <Message negative>\n                {notification}\n              </Message>\n            }\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\n\nexport default LoginView","// Libraries\nimport React from 'react'\nimport { Statistic } from 'semantic-ui-react'\n\nconst SensorValue = ({ value, label }) => {\n\n  return (\n    <>\n      <p>{label}: {value}</p>\n    </>\n\n  )\n}\n\nexport default SensorValue","// Libraries\nimport React from 'react'\nimport { Segment, Statistic } from 'semantic-ui-react'\n// Components\nimport SensorValue from './SensorValue'\n\nconst PlantSensor = ({ sensor }) => {\n\n  const colorSegment = () => {\n    \n  }\n\n  return (\n    <Segment color='green' inverted secondary style={{margin: '2px 1px'}}>\n\n        <SensorValue\n        value={sensor.type}\n        label={'Type'}\n        />\n\n        <SensorValue\n        value={sensor.model}\n        label={'Model'}\n        />\n\n        <SensorValue\n        value={sensor.location}\n        label={'Location'}\n        />\n\n        <SensorValue\n        value={sensor.nutrient}\n        label={'Nutrient'}\n        />\n\n        <SensorValue\n        value={sensor.light}\n        label={'Light'}\n        />\n\n        <SensorValue\n        value={sensor.temperature_C}\n        label={'Temperature'}\n        />\n\n        <SensorValue\n        value={sensor.soil_moisture}\n        label={'Soil moisture'}\n        />\n\n        <SensorValue\n        value={sensor.time}\n        label={'Updated'}\n        />\n\n        <SensorValue\n        value={sensor.battery_low}\n        label={'Battery'}\n        />\n\n    </Segment>\n  )\n}\n\nexport default PlantSensor","// Libraries\nimport React from 'react'\nimport { Segment, Statistic } from 'semantic-ui-react'\n// Components\nimport SensorValue from './SensorValue'\n\nconst HouseSensor = ({ sensor }) => {\n\n  const colorSegment = () => {\n   \n  }\n\n  return (\n    <Segment color='brown' inverted secondary style={{margin: '2px 1px'}}>\n\n\n    <SensorValue\n        value={sensor.type}\n        label={'Type'}\n        />\n\n        <SensorValue\n        value={sensor.model}\n        label={'Model'}\n        />\n\n        <SensorValue\n        value={sensor.location}\n        label={'Location'}\n        />\n\n        <SensorValue\n        value={sensor.humidity}\n        label={'Humidity'}\n        />\n\n        <SensorValue\n        value={sensor.temperature_C}\n        label={'Temperature'}\n        />\n        \n    </Segment>\n  )\n}\n\nexport default HouseSensor","// Libraries\nimport React, { useEffect } from 'react'\nimport { Header } from 'semantic-ui-react'\n// Components\nimport PlantSensor from './PlantSensor'\nimport HouseSensor from './HouseSensor'\n\nconst SensorView = ({ show, sensorData }) => {\n\n  useEffect(() => {\n    if (sensorData) {\n      console.log(sensorData)\n\n    }\n  }, [sensorData])\n\n  if (!show) {\n    return null\n  }\n\n  const sensors = () =>\n    sensorData\n      ? sensorData.map(sensor =>\n        sensor.type === 'plant'\n          ? <PlantSensor key={sensor.id} sensor={sensor} />\n          : <HouseSensor key={sensor.id} sensor={sensor} />)\n      : null\n\n\n  return (\n    <div style={{ height: '90%', overflow: 'scroll', marginTop: 5}}>\n\n      {sensors()}\n\n    </div>\n  )\n}\n\nexport default SensorView","import { gql } from 'apollo-boost'\n\nconst chatMessages = gql`\n{\n  messages {\n    content\n    created\n    id\n    user {\n      name\n    }\n  }\n}\n`\n\nexport default chatMessages","import { gql } from 'apollo-boost'\n\nconst createMessage = gql`\nmutation createMessage(\n  $content: String!\n  ) {\n  createMessage(\n    content: $content\n  ) {\n    content\n    user {\n      name\n    }\n    created\n    id\n  }\n}\n`\n\nexport default createMessage","import { gql } from 'apollo-boost'\n\nconst messageAdded = gql`\nsubscription {\n  messageAdded {\n    content\n    created\n    id\n    user {\n      name\n    }\n  }\n}\n`\n\nexport default messageAdded","// Libraries\nimport React from 'react'\nimport { Segment, Comment, Divider } from 'semantic-ui-react'\n\nconst ChatMessage = ({ message }) => (\n\n  <Comment style={{marginTop: 7, paddingTop: 7}}>\n    <Segment style={{ margin: '0 0 5px 0', padding: 7 }} compact inverted color='green' secondary>\n      <Comment.Content>\n        <Comment.Author style={{ color: 'darkgreen' }} as='a'>\n          {message.user.name}\n        </Comment.Author>\n        <Comment.Metadata>\n          <div>{new Date(parseInt(message.created)).toLocaleString()}</div>\n        </Comment.Metadata>\n        <Divider style={{ margin: '4px 0px 4px 0px' }} />\n        {message.content}\n      </Comment.Content>\n    </Segment>\n  </Comment>\n)\n\nexport default ChatMessage","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\nconst Loading = () => (\n    <Dimmer active inverted>\n      <Loader size='massive' inverted>Loading</Loader>\n    </Dimmer>\n)\n\nexport default Loading","// Libraries\nimport React, { useState, useRef, useEffect } from 'react'\nimport { useQuery, useMutation, useSubscription } from 'react-apollo-hooks'\nimport { Container, Icon, Comment, Menu, Input } from 'semantic-ui-react'\n// TypeDefs\nimport chatMessages from '../graphql/queries/chatMessages'\nimport createMessage from '../graphql/mutations/createMessage'\nimport messageAdded from '../graphql/subscriptions/messageAdded'\n// Components\nimport ChatMessage from './ChatMessage'\nimport Loading from './Loading'\n// Helper functions\nimport { includedIn } from '../utilities/helperFuncs'\n\nconst ChatView = ({ show }) => {\n  const { data, loading } = useQuery(chatMessages)\n  const [messageInput, setMessageInput] = useState('')\n  const el = useRef(null)\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [show])\n\n  const addMessage = useMutation(createMessage)\n\n  // eslint-disable-next-line no-unused-vars\n  const addedMessage = useSubscription(messageAdded, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      const messageData = client.readQuery({ query: chatMessages })\n      const addedMessage = subscriptionData.data.messageAdded\n\n      if (!includedIn(messageData.messages, addedMessage.id)) {\n        messageData.messages.push(addedMessage)\n\n        client.writeQuery({\n          query: chatMessages,\n          data: messageData,\n          id: 1\n        })\n        el.current.scrollIntoView({ block: 'end', behavior: 'smooth' })\n      }\n    }\n  })\n\n  const scrollToBottom = () => {\n    if (!el.current) { return }\n    el.current.scrollIntoView({ block: 'end', behavior: 'smooth' })\n  }\n\n  const handleSubmit = () => {\n    // Prevents empty messages\n    if (messageInput.length < 1) {\n      return\n    }\n\n    addMessage({\n      variables: {\n        \"content\": messageInput\n      }\n    })\n    setMessageInput('')\n  }\n\n  if (!show) {\n    return null\n  }\n\n  return (\n    <div style={{ height: '90%' }}>\n      <Container style={{ height: '90%', overflowY: 'scroll' }}>\n        {\n          loading\n            ?\n            <Loading />\n            :\n            <Comment.Group>\n              {data.messages.map(message => (\n                <ChatMessage\n                  key={message.id}\n                  message={message}\n                />\n              ))}\n            </Comment.Group>\n        }\n        <div id={'el'} ref={el}></div>\n      </Container>\n      <Menu fluid color='grey' style={{ marginBottom: 0, marginTop: 0, height: '10%' }}>\n        <Menu.Item style={{ width: '80vw' }}>\n          <Input\n            fluid\n            value={messageInput}\n            onChange={({ target }) => setMessageInput(target.value)}\n            onKeyPress={({ key }) => {\n              if (key === 'Enter') {\n                handleSubmit()\n              }\n            }}\n            onFocus={scrollToBottom}\n          />\n        </Menu.Item>\n        <Menu.Item\n          style={{ width: '20vw', justifyContent: 'center' }}\n          onClick={handleSubmit}>\n          <Icon\n            name='send'\n            inverted\n            circular\n            color='green' />\n        </Menu.Item>\n      </Menu>\n    </div>\n  )\n}\n\nexport default ChatView\n","// Libraries\nimport React from 'react'\nimport { Table, Container, Header } from 'semantic-ui-react'\n\nconst AboutView = ({ show }) => {\n\n  if (!show) {\n    return null\n  }\n\n  return (\n    <Container textAlign='center'>\n      <Header as='h1' style={{ padding: 25 }}>\n        About Kaste 2.0\n      </Header>\n      <Table style={{ background: 'lightgreen' }}>\n        <tbody>\n          <tr>\n            <td>Aim:</td>\n            <td>Design and implement a responsive web app to monitor and water plants.</td>\n          </tr>\n          <tr>\n            <td>Features:</td>\n            <td>\n              <ul>\n                <li>Plantwatering functionality for two or more users</li>\n                <li>Possibility to read plant info through charts</li>\n                <li>Simple chat</li>\n                <li>Rebooting Raspberry (that controls sensor data)</li>\n              </ul>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\n\nexport default AboutView","import { gql } from 'apollo-boost'\n\nconst editUserSensorEndpoint = gql`\nmutation editUserSensorEndpoint(\n  $sensorEndpoint: String!\n  ) {\n    editUserSensorEndpoint(\n    sensorEndpoint: $sensorEndpoint\n  ) {\n    sensorEndpoint\n    name\n    username\n  }\n}\n`\n\nexport default editUserSensorEndpoint","// Libraries\nimport React, { useState } from 'react'\nimport { Button, Input, Segment, Header, Divider, Message } from 'semantic-ui-react'\nimport axios from 'axios'\nimport { useMutation } from 'react-apollo-hooks'\n// Custom hooks\nimport { useNotification } from '../hooks/index'\n// TypeDefs\nimport editUserSensorEndpoint from '../graphql/mutations/editUserSensorEndpoint'\n\nconst SensorUrlForm = ({ sensorsConnected, token }) => {\n  const [sensorConnectedUrl, setSensorConnectedUrl] = useState(null)\n  const [sensorUrlField, setSensorUrlField] = useState('')\n  const [notification, setNotification] = useNotification()\n  const editSensorEndpoint = useMutation(editUserSensorEndpoint)\n\n  const handleConnect = async () => {\n    try {\n      const response = await axios.get(sensorUrlField)\n      const validUrl = Object.keys(response.data).includes('sensors')\n\n      if (validUrl) {\n        const confirmation = window.confirm('Would you like to receive information about these sensors?')\n\n        if (confirmation) {\n          editSensorEndpoint({\n            variables: {\n              sensorEndpoint: sensorUrlField\n            }\n          })\n          setSensorConnectedUrl(sensorUrlField)\n\n          // Sets new url endpoint to localstorage\n          const prevToken = JSON.parse(localStorage.getItem('kaste-user-token'))\n          localStorage.removeItem('kaste-user-token')\n          const updatedToken = {\n            ...prevToken,\n            sensorEndpoint: sensorUrlField\n          }\n          window.localStorage.setItem('kaste-user-token', JSON.stringify(updatedToken))\n          setSensorUrlField('')\n        }\n      }\n    } catch (error) {\n      setNotification(error.message)\n    }\n\n\n  }\n\n  return (\n    <Segment>\n      <Header>\n        Sensor resource URL\n       </Header>\n      <small style={{ color: 'gray' }}>\n        Provide an endpoint URL where sensor output comes from\n       </small>\n      <Input\n        value={sensorUrlField}\n        onChange={({ target }) => setSensorUrlField(target.value)}\n        fluid\n        placeholder='Enter URL...'\n        action={\n          <Button loading={false} onClick={handleConnect}>connect</Button>\n        }\n      />\n      {\n        sensorsConnected\n          ?\n          <Segment color={'green'}>\n            connected at: <br />\n            {token.sensorEndpoint}\n          </Segment>\n          :\n          <Segment color={'red'}>\n            not connected\n          </Segment>\n      }\n      <Divider />\n      {notification &&\n        <Message color='red'>\n          {notification}\n        </Message>\n      }\n    </Segment>\n  )\n}\n\nexport default SensorUrlForm","// Libraries\nimport React from 'react'\nimport { Grid } from 'semantic-ui-react'\n// Components\nimport SensorUrlForm from './SensorUrlForm'\n\nconst SettingsView = ({ show, sensorsConnected, token }) => {\n  if (!show) {\n    return null\n  }\n\n  return (\n    <Grid divided='vertically'>\n      <Grid.Row>\n        <Grid.Column>\n          <SensorUrlForm\n          sensorsConnected={sensorsConnected}\n          token={token}/>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default SettingsView","// Libraries\nimport React, { useState, useEffect } from 'react'\n// Custom hooks\nimport { useSensors } from './hooks/index'\n// Components\nimport ResponsiveLayout from './components/ResponsiveLayout'\nimport LoginView from './components/LoginView'\nimport SensorView from './components/SensorView'\nimport ChatView from './components/ChatView'\nimport AboutView from './components/AboutView'\nimport SettingsView from './components/SettingsView'\n\nconst App = () => {\n  const [page, setPage] = useState('Sensors')\n  const [token, setToken] = useState(JSON.parse(localStorage.getItem('kaste-user-token')))\n  const [sensorData, actions, startFetchingSensors, sensorsConnected, sensorError] = useSensors(60)\n\n  useEffect(() => {\n    if (token && token.sensorEndpoint) {\n      startFetchingSensors(token.sensorEndpoint)\n    }\n  }, [token])\n\n  const logOut = () => {\n    setToken(null)\n    localStorage.removeItem('kaste-user-token')\n  }\n\n  return (\n    <>\n      {!token\n        ?\n        <LoginView\n          setToken={setToken} />\n        :\n        <ResponsiveLayout\n          page={page}\n          setPage={setPage}\n          logOut={logOut}\n        >\n\n          <SensorView\n            sensorData={sensorData}\n            show={page === 'Sensors'}\n          />\n\n          <ChatView\n            show={page === 'Chat'}\n          />\n\n          <AboutView\n            show={page === 'About'}\n          />\n\n          <SettingsView\n            show={page === 'Settings'}\n            sensorsConnected={sensorsConnected}\n            token={token}\n          />\n        </ResponsiveLayout>\n      }\n    </>\n  )\n}\n\nexport default App;\n\n","//Libraries\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloProvider } from 'react-apollo-hooks'\n// ...Because of authorization for headers (instead of apollo-boost)\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n// ...For Subscriptions (websocket)\nimport { split } from 'apollo-link'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { getMainDefinition } from 'apollo-utilities'\n// Utilities\nimport config from './utilities/config'\n// Components\nimport App from './App'\n\nconst wslink = new WebSocketLink({\n  uri: config.wsUrl,\n  options: { reconnect: true }\n})\n\nconst httpLink = createHttpLink({\n  uri: config.httpUrl\n})\n\nconst authLink = setContext((_, { headers }) => {\n  const token = JSON.parse(localStorage.getItem('kaste-user-token'))\n  console.log('token', token)\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token.value}` : null\n    }\n  }\n})\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return kind === 'OperationDefinition' && operation === 'subscription'\n  },\n  wslink,\n  authLink.concat(httpLink),\n)\n\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n})\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n  , document.getElementById('root'))"],"sourceRoot":""}