{"version":3,"sources":["utilities/config.js","utilities/helperFuncs.js","hooks/index.js","components/MobileContainer.js","components/DesktopContainer.js","components/ResponsiveLayout.js","graphql/mutations/loginUser.js","components/LoginView.js","components/SensorValue.js","components/PlantSensor.js","components/HouseSensor.js","components/SensorView.js","graphql/queries/chatMessages.js","graphql/queries/currentUser.js","graphql/mutations/createMessage.js","graphql/subscriptions/messageAdded.js","components/ChatMessage.js","components/Loading.js","components/ChatView.js","components/AboutView.js","graphql/mutations/editUserSensorEndpoint.js","components/SensorUrlForm.js","components/SettingsView.js","components/ImageError.js","components/VideoView.js","App.js","index.js"],"names":["config","wsUrl","httpUrl","includedIn","set","object","map","p","id","includes","formatSensorData","sensorData","Object","values","reduce","acc","cur","concat","handleSensorEndpointUpdateForToken","sensorUrlField","setToken","prevToken","JSON","parse","localStorage","getItem","removeItem","updatedToken","objectSpread","sensorEndpoint","window","setItem","stringify","useNotification","duration","arguments","length","undefined","_useState3","useState","_useState4","slicedToArray","text","setText","setTimeout","MobileContainer","_ref","children","setPage","logOut","page","actions","_useState","_useState2","recentlyWatered","setRecentlyWatered","showSidebar","setShowSidebar","_useState5","_useState6","cameraConnected","setCameraConnected","_useState7","_useState8","raspConnected","setRaspConnected","_useState9","_useState10","wateringConnected","setWateringConnected","handleViewChange","view","useEffect","camera","reboot","water","react_default","a","createElement","Fragment","Responsive","maxWidth","onlyMobile","as","Sidebar","Pushable","style","height","Menu","animation","inverted","onHide","vertical","visible","icon","width","Item","onClick","Icon","name","disabled","console","log","Pusher","dimmed","widths","pointing","color","size","marginBottom","borderRadius","alignSelf","header","position","DesktopContainer","minWidth","onlyTablet","fixed","ResponsiveLayout","components_MobileContainer","components_DesktopContainer","loginUser","gql","_templateObject","LoginView","login","useMutation","_useNotification","_useNotification2","notification","setNotification","username","setUsername","password","setPassword","handleLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","result","token","wrap","_context","prev","next","variables","sent","data","t0","graphQLErrors","message","stop","apply","this","className","Grid","textAlign","background","verticalAlign","Column","Header","dividing","Form","onSubmit","Segment","stacked","raised","Input","type","value","onChange","_ref3","target","fluid","iconPosition","placeholder","_ref4","Button","Message","negative","SensorValue","label","PlantSensor","sensor","secondary","margin","components_SensorValue","model","location","nutrient","light","temperature_C","soil_moisture","time","battery_low","HouseSensor","humidity","SensorView","show","overflowY","components_PlantSensor","key","components_HouseSensor","chatMessages","chatMessages_templateObject","currentUser","currentUser_templateObject","createMessage","createMessage_templateObject","messageAdded","messageAdded_templateObject","ChatMessage","defSegColor","me","user","defFloatSide","segmentStyle","padding","float","clear","Comment","marginTop","paddingTop","overflow","compact","Content","Author","Metadata","Date","parseInt","created","toLocaleString","Divider","content","Loading","Dimmer","active","Loader","ChatView","_useQuery","useQuery","loading","userQuery","messageInput","setMessageInput","el","useRef","scrollToBottom","addMessage","useSubscription","onSubscriptionData","client","subscriptionData","messageData","readQuery","query","addedMessage","messages","push","writeQuery","current","scrollIntoView","block","behavior","handleSubmit","Container","components_Loading","Group","components_ChatMessage","ref","onKeyPress","onFocus","justifyContent","circular","AboutView","Table","editUserSensorEndpoint","editUserSensorEndpoint_templateObject","SensorUrlForm","sensorsConnected","setSensorUrlField","editSensorEndpoint","handleConnect","response","axios","get","keys","confirm","action","SettingsView","divided","Row","components_SensorUrlForm","ImageError","divStyle","display","alignItems","VideoView","imageStatus","setImageStatus","displayImage","setDisplayImage","Image","centered","src","onLoad","onError","components_ImageError","App","_useSensors","setSensorData","setActions","isConnected","setIsConnected","error","setError","_useState11","_useState12","intervalId","setIntervalId","getSensorData","url","sensors","_x","startFetching","setInterval","stopFetching","clearInterval","useSensors","_useSensors2","sensorService","components_ResponsiveLayout","components_SensorView","components_ChatView","components_AboutView","components_SettingsView","components_VideoView","components_LoginView","wslink","WebSocketLink","uri","options","reconnect","httpLink","createHttpLink","authLink","setContext","_","headers","authorization","link","split","_getMainDefinition","getMainDefinition","kind","operation","ApolloClient","cache","InMemoryCache","ReactDOM","render","ApolloContext","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.40efd756.chunk.js","sourcesContent":["let wsUrl = 'ws://localhost:4000/graphql'\nlet httpUrl = 'http://localhost:4000/graphql'\n\nif (process.env.NODE_ENV === 'production') {\n  wsUrl = 'wss://lit-forest-54340.herokuapp.com/graphql'\n  httpUrl = 'https://lit-forest-54340.herokuapp.com/graphql'\n}\n\nexport default { wsUrl, httpUrl }","export const includedIn = (set, object) =>\n  set.map(p => p.id).includes(object.id)\n\n// Sensor data comes in two objects. they need to be merged into one one array\nexport const formatSensorData = (sensorData) => {\n  const values = Object.values(sensorData)\n  const flattenedArray = values.reduce((acc, cur) => cur.concat(acc))\n  return flattenedArray\n}\n\n// Sets new url endpoint to localstorage\nexport const handleSensorEndpointUpdateForToken = (sensorUrlField, setToken) => {\n  const prevToken = JSON.parse(localStorage.getItem('kaste-user-token'))\n  localStorage.removeItem('kaste-user-token')\n\n  const updatedToken = {\n    ...prevToken,\n    sensorEndpoint: sensorUrlField\n  }\n\n  window.localStorage.setItem('kaste-user-token', JSON.stringify(updatedToken))\n  setToken(updatedToken)\n}\n\n\nexport default { includedIn, formatSensorData, handleSensorEndpointUpdateForToken }","import axios from 'axios'\nimport { useState, useEffect } from 'react'\n// Helper functions\nimport { formatSensorData } from '../utilities/helperFuncs'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n    reset\n  }\n}\n\n// Provide duration as argument (seconds)\nexport const useNotification = (duration = 5) => {\n  const [text, setText] = useState(null)\n\n  const reset = () => setText(null)\n\n  const set = (text) => {\n    setText(text)\n    setTimeout(() => {\n      reset()\n    }, duration * 1000)\n  }\n\n  return [text, set]\n}\n\n// Handle fetching sensorinformation\n// Provide duration as argument (seconds)\nexport const useSensors = (duration = 60) => {\n  const [sensorData, setSensorData] = useState(null)\n  const [actions, setActions] = useState(null)\n  const [isConnected, setIsConnected] = useState(false)\n  const [error, setError] = useNotification(null)\n  const [intervalId, setIntervalId] = useState(null)\n\n  const getSensorData = async (url) => {\n    try {\n      const response = await axios.get(url)\n\n      // Format sensor data with helper function\n      setSensorData(formatSensorData(response.data.sensors))\n      // get actions\n      setActions(response.data.actions)\n      setIsConnected(true)\n    } catch (error) {\n      setIsConnected(false)\n      setError(error)\n    }\n  }\n\n  const startFetching = (url) => {\n    console.log('fetching...')\n    getSensorData(url)\n    const id = setInterval(() => {\n      console.log('fetching...')\n      getSensorData(url)\n    }, duration * 1000);\n    setIntervalId(id)\n  }\n\n  const stopFetching = () => {\n    console.log('IntervalId', intervalId)\n    clearInterval(intervalId)\n    setSensorData(null)\n    setIsConnected(false)\n    setActions(null)\n  }\n\n  const sensorService = {\n    startFetching,\n    stopFetching\n  }\n\n\n  return [sensorData, actions, sensorService, isConnected, error]\n}","// Libraries\nimport React, { useState, useEffect } from 'react'\nimport { Responsive, Sidebar, Menu, Icon, Segment, Button, CommentAction } from 'semantic-ui-react'\n\nconst MobileContainer = ({ children, setPage, logOut, page, actions }) => {\n  const [recentlyWatered, setRecentlyWatered] = useState(false)\n  const [showSidebar, setShowSidebar] = useState(false)\n  const [cameraConnected, setCameraConnected] = useState(false)\n  const [raspConnected, setRaspConnected] = useState(false)\n  const [wateringConnected, setWateringConnected] = useState(false)\n\n  const handleViewChange = (view) => () => {\n    setShowSidebar(false)\n    setPage(view)\n  }\n\n  // Check if sensor actions include camera, watering or rasp rebooting functionality\n  useEffect(() => {\n    if (actions) {\n      setCameraConnected(actions.camera !== undefined)\n      setRaspConnected(actions.reboot !== undefined)\n      setWateringConnected(actions.water !== undefined)\n    } else {\n      setCameraConnected(false)\n      setRaspConnected(false)\n      setWateringConnected(false)\n    }\n\n  }, [actions])\n\n  const handleWatering = () => {\n    setRecentlyWatered(true)\n    console.log('Watering plants plants')\n    setTimeout(() => {\n      setRecentlyWatered(false)\n      console.log('Watering completed')\n\n    }, 5000)\n  }\n\n  return (\n    <>\n      <Responsive\n        maxWidth={Responsive.onlyMobile.maxWidth}\n        as={Sidebar.Pushable}\n        style={{ height: '100vh' }}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          inverted\n          onHide={() => setShowSidebar(false)}\n          vertical\n          visible={showSidebar}\n          icon='labeled'\n          width='thin'\n        >\n          <Menu.Item onClick={handleViewChange('Sensors')}>\n            <Icon name='info' />\n            Sensors\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('Chat')}>\n            <Icon name='comments outline' />\n            Chat\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('Settings')}>\n            <Icon name='settings' />\n            Settings\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('About')}>\n            <Icon name='question' />\n            About\n          </Menu.Item>\n          <Menu.Item disabled={!cameraConnected} onClick={handleViewChange('Video')}>\n            <Icon name='eye' />\n            Live Feed\n          </Menu.Item>\n          <Menu.Item disabled={!wateringConnected || recentlyWatered} onClick={handleWatering}>\n            <Icon name='exclamation' />\n            Water plants\n          </Menu.Item>\n          <Menu.Item disabled={!raspConnected} onClick={() => console.log('Reboot rasp')}>\n            <Icon name='redo' />\n            Reboot rasp\n          </Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher style={{ height: '100%' }} dimmed={showSidebar}>\n\n          <Menu widths={3} inverted pointing color='green' size='large' style={{ height: '50px', marginBottom: 0, borderRadius: 0 }}>\n            <Menu.Item onClick={() => setShowSidebar(true)} style={{ alignSelf: 'center' }}>\n              <Icon name='sidebar' />\n            </Menu.Item>\n            <Menu.Item header={true}>\n              {page}\n            </Menu.Item>\n            <Menu.Item position='right' onClick={() => logOut()} style={{ alignSelf: 'center' }}>\n              <Icon name='log out' />\n            </Menu.Item>\n          </Menu>\n\n          <div style={{height: 'calc(100vh - 50px)'}}>\n            {children}\n          </div>\n\n        </Sidebar.Pusher>\n      </Responsive>\n    </>\n  )\n}\n\nexport default MobileContainer","// Libraries\nimport React, { useState } from 'react'\nimport { Responsive, Menu, Icon } from 'semantic-ui-react'\n\nconst DesktopContainer = ({ children, setPage, logOut }) => {\n  const [recentlyWatered, setRecentlyWatered] = useState(false)\n\n  // Handles sidebar navigation\n  const handleViewChange = (view) => () => {\n    setPage(view)\n  }\n\n  const handleWatering = () => {\n    setRecentlyWatered(true)\n    console.log('Watering plants plants')\n    setTimeout(() => {\n      setRecentlyWatered(false)\n      console.log('Watering completed')\n\n    }, 5000)\n\n  }\n\n  return (\n    <>\n      <Responsive\n        style={{ height: '100vh' }}\n        minWidth={Responsive.onlyTablet.minWidth}\n      >\n        <Menu\n          style={{ height: 71 }}\n          inverted\n          icon='labeled'\n          color='green'\n          fixed='top'\n        >\n          <Menu.Item onClick={handleViewChange('Sensors')}>\n            <Icon name='info' />\n            Sensors\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('Chat')}>\n            <Icon name='comments outline' />\n            Chat\n          </Menu.Item>\n          <Menu.Item disabled={recentlyWatered} onClick={handleWatering}>\n            <Icon name='exclamation' />\n            Water plants\n          </Menu.Item>\n          <Menu.Item onClick={() => console.log('Reboot rasp')}>\n            <Icon name='redo' />\n            Reboot rasp\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('Video')}>\n            <Icon name='eye' />\n            Live Feed\n          </Menu.Item>\n          <Menu.Menu position='right'>\n            <Menu.Item onClick={handleViewChange('Settings')}>\n              <Icon name='settings' />\n              Settings\n          </Menu.Item>\n            <Menu.Item onClick={handleViewChange('About')}>\n              <Icon name='question' />\n              About\n          </Menu.Item>\n            <Menu.Item onClick={() => logOut(false)}>\n              <Icon name='log out' />\n              Log out\n          </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        <div style={{ height: 71 }} />\n        <div style={{ height: 'calc(100vh - 71px)' }}>\n          {children}\n        </div>\n      </Responsive>\n    </>\n  )\n}\n\nexport default DesktopContainer","// Libraries\nimport React from 'react'\n\n// Components\nimport MobileContainer from './MobileContainer'\nimport DesktopContainer from './DesktopContainer'\n\nconst ResponsiveLayout = ({ children, setPage, logOut, page, actions }) => {\n\n  return (\n    <>\n      <MobileContainer\n        logOut={logOut}\n        page={page}\n        actions={actions}\n        setPage={setPage}>\n        {children}\n      </MobileContainer>\n\n      <DesktopContainer\n        logOut={logOut}\n        setPage={setPage}\n        actions={actions}>\n        {children}\n      </DesktopContainer>\n    </>\n  )\n}\n\nexport default ResponsiveLayout","import { gql } from 'apollo-boost'\n\nconst loginUser = gql`\nmutation loginUser(\n  $password: String!\n  $username: String!\n  ) {\n  login(\n    password: $password\n    username: $username\n  ) {\n    value\n    username\n    sensorEndpoint\n  }\n}\n`\n\nexport default loginUser","// Libraries\nimport React, { useState } from 'react'\nimport { Message, Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\nimport { useMutation } from 'react-apollo-hooks'\n// Typedefs\nimport loginUser from '../graphql/mutations/loginUser'\n// Hooks\nimport { useNotification } from '../hooks/index'\n\n\nconst LoginView = ({ setToken }) => {\n  const login = useMutation(loginUser)\n  const [notification, setNotification] = useNotification()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async () => {\n    try {\n      const result = await login({\n        variables: {\n          username, password\n        }\n      })\n\n      const token = result.data.login\n      console.log('token', token)\n      setToken(token)\n      localStorage.setItem('kaste-user-token', JSON.stringify(token))\n\n    } catch (error) {\n      setNotification(error.graphQLErrors[0].message)\n    }\n  }\n\n  return (\n    <div className='login-form'>\n      <style> {`\n  body > div,\n  body > div > div,\n  body > div > div > div.login-form {\n    height: 100%;\n  }\n          `}\n      </style>\n      <Grid textAlign='center' style={{ height: '100%', background: 'lightgreen' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 250 }}>\n          <Header as='h1' color='grey' dividing textAlign='center'>\n            Log in to Kaste 2.0\n          </Header>\n          <Form size='large' onSubmit={handleLogin}>\n            <Segment stacked raised>\n              <Form.Input\n                type=\"text\"\n                value={username}\n                onChange={({ target }) => setUsername(target.value)}\n                fluid\n                icon='user'\n                iconPosition='left'\n                placeholder='Username'\n              />\n              <Form.Input\n                type=\"password\"\n                value={password}\n                onChange={({ target }) => setPassword(target.value)}\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n              />\n\n              <Button color='brown' size='large' type='submit'>\n                Log in\n              </Button>\n            </Segment>\n            {notification &&\n              <Message negative>\n                {notification}\n              </Message>\n            }\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\n\nexport default LoginView","// Libraries\nimport React from 'react'\nimport { Statistic } from 'semantic-ui-react'\n\nconst SensorValue = ({ value, label }) => {\n\n  return (\n    <>\n      <p>{label}: {value}</p>\n    </>\n\n  )\n}\n\nexport default SensorValue","// Libraries\nimport React from 'react'\nimport { Segment, Statistic } from 'semantic-ui-react'\n// Components\nimport SensorValue from './SensorValue'\n\nconst PlantSensor = ({ sensor }) => {\n\n  const colorSegment = () => {\n    \n  }\n\n  return (\n    <Segment color='green' inverted secondary style={{margin: '2px 1px'}}>\n\n        <SensorValue\n        value={sensor.type}\n        label={'Type'}\n        />\n\n        <SensorValue\n        value={sensor.model}\n        label={'Model'}\n        />\n\n        <SensorValue\n        value={sensor.location}\n        label={'Location'}\n        />\n\n        <SensorValue\n        value={sensor.nutrient}\n        label={'Nutrient'}\n        />\n\n        <SensorValue\n        value={sensor.light}\n        label={'Light'}\n        />\n\n        <SensorValue\n        value={sensor.temperature_C}\n        label={'Temperature'}\n        />\n\n        <SensorValue\n        value={sensor.soil_moisture}\n        label={'Soil moisture'}\n        />\n\n        <SensorValue\n        value={sensor.time}\n        label={'Updated'}\n        />\n\n        <SensorValue\n        value={sensor.battery_low}\n        label={'Battery'}\n        />\n\n    </Segment>\n  )\n}\n\nexport default PlantSensor","// Libraries\nimport React from 'react'\nimport { Segment, Statistic } from 'semantic-ui-react'\n// Components\nimport SensorValue from './SensorValue'\n\nconst HouseSensor = ({ sensor }) => {\n\n  const colorSegment = () => {\n   \n  }\n\n  return (\n    <Segment color='brown' inverted secondary style={{margin: '2px 1px'}}>\n\n\n    <SensorValue\n        value={sensor.type}\n        label={'Type'}\n        />\n\n        <SensorValue\n        value={sensor.model}\n        label={'Model'}\n        />\n\n        <SensorValue\n        value={sensor.location}\n        label={'Location'}\n        />\n\n        <SensorValue\n        value={sensor.humidity}\n        label={'Humidity'}\n        />\n\n        <SensorValue\n        value={sensor.temperature_C}\n        label={'Temperature'}\n        />\n        \n        <SensorValue\n        value={sensor.time}\n        label={'Updated'}\n        />\n        \n    </Segment>\n  )\n}\n\nexport default HouseSensor","// Libraries\nimport React, { useEffect } from 'react'\nimport { Header } from 'semantic-ui-react'\n// Components\nimport PlantSensor from './PlantSensor'\nimport HouseSensor from './HouseSensor'\n\nconst SensorView = ({ show, sensorData }) => {\n\n  if (!show) {\n    return null\n  }\n\n  const sensors = () =>\n    sensorData\n      ? sensorData.map(sensor =>\n        sensor.type === 'plant'\n          ? <PlantSensor key={sensor.id} sensor={sensor} />\n          : <HouseSensor key={sensor.id} sensor={sensor} />)\n      : null\n\n\n  return (\n    <div style={{ height: '100%', overflowY: 'scroll' }}>\n\n      {sensors()}\n\n    </div>\n  )\n}\n\nexport default SensorView","import { gql } from 'apollo-boost'\n\nconst chatMessages = gql`\n{\n  messages {\n    content\n    created\n    id\n    user {\n      name\n    }\n  }\n}\n`\n\nexport default chatMessages","import { gql } from 'apollo-boost'\n\nconst currentUser = gql`\n{\n  me {\n    name\n    username\n    id\n    sensorEndpoint\n  }\n}\n`\n\nexport default currentUser","import { gql } from 'apollo-boost'\n\nconst createMessage = gql`\nmutation createMessage(\n  $content: String!\n  ) {\n  createMessage(\n    content: $content\n  ) {\n    content\n    user {\n      name\n    }\n    created\n    id\n  }\n}\n`\n\nexport default createMessage","import { gql } from 'apollo-boost'\n\nconst messageAdded = gql`\nsubscription {\n  messageAdded {\n    content\n    created\n    id\n    user {\n      name\n    }\n  }\n}\n`\n\nexport default messageAdded","// Libraries\nimport React from 'react'\nimport { Segment, Comment, Divider } from 'semantic-ui-react'\n\nconst ChatMessage = ({ message, currentUser }) => {\n\n  // Defines message color by user\n  const defSegColor = currentUser.me.name === message.user.name\n    ? 'blue'\n    : 'green'\n\n  // Defines float side by user\n  const defFloatSide = currentUser.me.name === message.user.name\n    ? 'left'\n    : 'right'\n\n  const segmentStyle = {\n    margin: '0 0 5px 0',\n    padding: 7,\n    float: `${defFloatSide}`,\n    clear: 'both'\n  }\n\n  return (\n    < Comment style={{ marginTop: 7, paddingTop: 7, overflow: 'auto' }}>\n        <Segment\n          style={segmentStyle} compact inverted color={defSegColor} secondary>\n          <Comment.Content>\n            <Comment.Author as='a'>\n              {message.user.name}\n            </Comment.Author>\n            <Comment.Metadata>\n              <div>{new Date(parseInt(message.created)).toLocaleString()}</div>\n            </Comment.Metadata>\n            <Divider style={{ margin: '4px 0px 4px 0px' }} />\n            {message.content}\n          </Comment.Content>\n        </Segment>\n    </Comment >\n  )\n}\n\n\nexport default ChatMessage","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\nconst Loading = () => (\n    <Dimmer active>\n      <Loader size='massive' inverted>Loading</Loader>\n    </Dimmer>\n)\n\nexport default Loading","// Libraries\nimport React, { useState, useRef, useEffect } from 'react'\nimport { useQuery, useMutation, useSubscription } from 'react-apollo-hooks'\nimport { Container, Icon, Comment, Menu, Input } from 'semantic-ui-react'\n// TypeDefs\nimport chatMessages from '../graphql/queries/chatMessages'\nimport currentUser from '../graphql/queries/currentUser'\nimport createMessage from '../graphql/mutations/createMessage'\nimport messageAdded from '../graphql/subscriptions/messageAdded'\n// Components\nimport ChatMessage from './ChatMessage'\nimport Loading from './Loading'\n// Helper functions\nimport { includedIn } from '../utilities/helperFuncs'\n\nconst ChatView = ({ show }) => {\n  const { data, loading } = useQuery(chatMessages)\n  const userQuery = useQuery(currentUser)\n  const [messageInput, setMessageInput] = useState('')\n  const el = useRef(null)\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [show])\n\n  const addMessage = useMutation(createMessage)\n\n  // eslint-disable-next-line no-unused-vars\n  const addedMessage = useSubscription(messageAdded, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      const messageData = client.readQuery({ query: chatMessages })\n      const addedMessage = subscriptionData.data.messageAdded\n\n      if (!includedIn(messageData.messages, addedMessage.id)) {\n        messageData.messages.push(addedMessage)\n\n        client.writeQuery({\n          query: chatMessages,\n          data: messageData,\n          id: 1\n        })\n        el.current.scrollIntoView({ block: 'end', behavior: 'smooth' })\n      }\n    }\n  })\n\n  const scrollToBottom = () => {\n    if (!el.current) { return }\n    el.current.scrollIntoView({ block: 'end', behavior: 'smooth' })\n  }\n\n  const handleSubmit = () => {\n    // Prevents empty messages\n    if (messageInput.length < 1) {\n      return\n    }\n\n    addMessage({\n      variables: {\n        \"content\": messageInput\n      }\n    })\n    setMessageInput('')\n  }\n\n  if (!show) {\n    return null\n  }\n\n  return (\n    <div style={{ height: '100%' }}>\n      <Container style={{ height: '90%', overflowY: 'scroll' }}>\n        {\n          loading || userQuery.loading\n            ?\n            <Loading />\n            :\n            <Comment.Group>\n              {data.messages.map(message => (\n                <ChatMessage\n                  key={message.id}\n                  message={message}\n                  currentUser={userQuery.data}\n                />\n              ))}\n            </Comment.Group>\n        }\n        <div id={'el'} ref={el}></div>\n      </Container>\n\n      <Menu fluid color='grey' style={{ marginBottom: 0, marginTop: 0, height: '10%' }}>\n        <Menu.Item style={{ width: '80vw' }}>\n          <Input\n            fluid\n            value={messageInput}\n            onChange={({ target }) => setMessageInput(target.value)}\n            onKeyPress={({ key }) => {\n              if (key === 'Enter') {\n                handleSubmit()\n              }\n            }}\n            onFocus={scrollToBottom}\n          />\n        </Menu.Item>\n        <Menu.Item\n          style={{ width: '20vw', justifyContent: 'center' }}\n          onClick={handleSubmit}>\n          <Icon\n            name='send'\n            inverted\n            circular\n            color='green' />\n        </Menu.Item>\n      </Menu>\n    </div>\n  )\n}\n\nexport default ChatView\n","// Libraries\nimport React from 'react'\nimport { Table, Container, Header } from 'semantic-ui-react'\n\nconst AboutView = ({ show }) => {\n\n  if (!show) {\n    return null\n  }\n\n  return (\n    <Container textAlign='center'>\n      <Header as='h1' style={{ padding: 25 }}>\n        About Kaste 2.0\n      </Header>\n      <Table style={{ background: 'lightgreen' }}>\n        <tbody>\n          <tr>\n            <td>Aim:</td>\n            <td>Design and implement a responsive web app to monitor and water plants.</td>\n          </tr>\n          <tr>\n            <td>Features:</td>\n            <td>\n              <ul>\n                <li>Plantwatering functionality for two or more users</li>\n                <li>Possibility to read plant info through charts</li>\n                <li>Simple chat</li>\n                <li>Rebooting Raspberry (that controls sensor data)</li>\n              </ul>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\n\nexport default AboutView","import { gql } from 'apollo-boost'\n\nconst editUserSensorEndpoint = gql`\nmutation editUserSensorEndpoint(\n  $sensorEndpoint: String!\n  ) {\n    editUserSensorEndpoint(\n    sensorEndpoint: $sensorEndpoint\n  ) {\n    sensorEndpoint\n    name\n    username\n  }\n}\n`\n\nexport default editUserSensorEndpoint","// Libraries\nimport React, { useState } from 'react'\nimport { Button, Input, Segment, Header, Divider, Message } from 'semantic-ui-react'\nimport axios from 'axios'\nimport { useMutation } from 'react-apollo-hooks'\n// Custom hooks\nimport { useNotification } from '../hooks/index'\n// TypeDefs\nimport editUserSensorEndpoint from '../graphql/mutations/editUserSensorEndpoint'\n// Helper functions\nimport { handleSensorEndpointUpdateForToken } from '../utilities/helperFuncs'\n\nconst SensorUrlForm = ({ sensorsConnected, token, setToken }) => {\n  const [sensorUrlField, setSensorUrlField] = useState('')\n  const [notification, setNotification] = useNotification()\n  const editSensorEndpoint = useMutation(editUserSensorEndpoint)\n\n  const handleConnect = async () => {\n    try {\n      const response = await axios.get(sensorUrlField)\n      const isValidUrl = Object.keys(response.data).includes('sensors')\n\n      if (isValidUrl) {\n        const confirmation = window.confirm('Would you like to receive information about these sensors?')\n\n        if (confirmation) {\n          editSensorEndpoint({\n            variables: {\n              sensorEndpoint: sensorUrlField\n            }\n          })\n\n          // For localstorage\n          handleSensorEndpointUpdateForToken(sensorUrlField, setToken)\n          // For app\n          \n          setSensorUrlField('')\n        }\n      }\n    } catch (error) {\n      setNotification(error.message)\n    }\n  }\n\n  const handleClearUrl = () => {\n    const confirmation = window.confirm('Are you sure? Clearing sensor resource url cuts access to all information and functionality.')\n\n    if (confirmation) {\n      editSensorEndpoint({\n        variables: {\n          sensorEndpoint: ''\n        }\n      })\n\n      handleSensorEndpointUpdateForToken('', setToken)\n    }\n  }\n\n  return (\n    <Segment>\n      <Header>\n        Sensor resource URL\n       </Header>\n      <small style={{ color: 'gray' }}>\n        Provide an endpoint URL where sensor output comes from\n       </small>\n      <Input\n        value={sensorUrlField}\n        onChange={({ target }) => setSensorUrlField(target.value)}\n        fluid\n        placeholder='Enter URL...'\n        action={\n          <Button loading={false} onClick={handleConnect}>connect</Button>\n        }\n      />\n      {\n        sensorsConnected\n          ?\n          <Segment color={'green'}>\n            <Header as='h3'>\n              connected at:\n              </Header>\n            {token.sensorEndpoint}\n            <Button\n              fluid\n              style={{ marginTop: 10 }}\n              onClick={handleClearUrl}>\n              clear\n            </Button>\n          </Segment>\n          :\n          <Segment color={'red'}>\n            not connected\n          </Segment>\n      }\n      <Divider />\n      {notification &&\n        <Message color='red'>\n          {notification}\n        </Message>\n      }\n    </Segment>\n  )\n}\n\nexport default SensorUrlForm","// Libraries\nimport React from 'react'\nimport { Grid } from 'semantic-ui-react'\n// Components\nimport SensorUrlForm from './SensorUrlForm'\n\nconst SettingsView = ({ show, sensorsConnected, token, setToken }) => {\n  if (!show) {\n    return null\n  }\n\n  return (\n    <Grid divided='vertically'>\n      <Grid.Row>\n        <Grid.Column>\n          <SensorUrlForm\n          sensorsConnected={sensorsConnected}\n          token={token}\n          setToken={setToken}/>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default SettingsView","// Libraries\nimport React from 'react'\nimport { Icon, Segment } from 'semantic-ui-react'\n\nconst ImageError = () => {\n  return (\n    <div style={{textAlign: 'center'}}>\n      <Icon name='frown' inverted color='grey' size='massive'/>\n      <Segment\n        color='red'\n        inverted\n        secondary\n        compact>\n        <p style={{ color: 'white' }}>Image failed to load...</p>\n      </Segment>\n    </div>\n  )\n}\nexport default ImageError","// Libraries\nimport React, { useState, useEffect } from 'react'\nimport { Image } from 'semantic-ui-react'\n// Components\nimport Loading from './Loading'\nimport ImageError from './ImageError'\n\nconst divStyle = {\n  height: '100%',\n  background: 'black',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n}\n\nconst VideoView = ({ show, actions }) => {\n  const [imageStatus, setImageStatus] = useState(<Loading />)\n  const [displayImage, setDisplayImage] = useState('block')\n\n  useEffect(() => {\n    setImageStatus(<Loading />)\n    setDisplayImage('block')\n  }, [show])\n\n  if (!show) {\n    return null\n  }\n  return (\n    <div style={divStyle}>\n\n      {imageStatus}\n      {\n        actions\n          ? <Image\n          style={{maxWidth: 800, display: `${displayImage}`}}\n            centered\n            src={actions.camera}\n            fluid\n            onLoad={() => setImageStatus(null)}\n            onError={() => {\n              setImageStatus(<ImageError />)\n              setDisplayImage('none')\n            }}\n          />\n          : null\n      }\n    </div>\n  )\n}\n\nexport default VideoView","// Libraries\nimport React, { useState, useEffect } from 'react'\n// Custom hooks\nimport { useSensors } from './hooks/index'\n// Components\nimport ResponsiveLayout from './components/ResponsiveLayout'\nimport LoginView from './components/LoginView'\nimport SensorView from './components/SensorView'\nimport ChatView from './components/ChatView'\nimport AboutView from './components/AboutView'\nimport SettingsView from './components/SettingsView'\nimport VideoView from './components/VideoView'\n\nconst App = () => {\n  const [page, setPage] = useState('Settings')\n  const [token, setToken] = useState(JSON.parse(localStorage.getItem('kaste-user-token')))\n  const [sensorData, actions, sensorService, sensorsConnected, sensorError] = useSensors(5)\n\n  useEffect(() => {\n    if (token && token.sensorEndpoint) {\n      sensorService.startFetching(token.sensorEndpoint)\n    } else {\n      sensorService.stopFetching()\n    }\n  }, [token])\n\n  const logOut = () => {\n    setPage('Settings')\n    sensorService.stopFetching()\n    setToken(null)\n    localStorage.removeItem('kaste-user-token')\n  }\n\n  return (\n    <>\n      {!token\n        ?\n        <LoginView\n          setToken={setToken} />\n        :\n        <ResponsiveLayout\n          page={page}\n          setPage={setPage}\n          logOut={logOut}\n          actions={actions}\n        >\n\n          <SensorView\n            sensorData={sensorData}\n            show={page === 'Sensors'}\n          />\n\n          <ChatView\n            show={page === 'Chat'}\n          />\n\n          <AboutView\n            show={page === 'About'}\n          />\n\n          <SettingsView\n            show={page === 'Settings'}\n            sensorsConnected={sensorsConnected}\n            token={token}\n            setToken={setToken}\n          />\n\n          <VideoView\n            show={page === 'Video'}\n            token={token}\n            actions={actions}\n          />\n        </ResponsiveLayout>\n      }\n    </>\n  )\n}\n\nexport default App;\n\n","//Libraries\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloProvider } from 'react-apollo-hooks'\n// ...Because of authorization for headers (instead of apollo-boost)\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n// ...For Subscriptions (websocket)\nimport { split } from 'apollo-link'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { getMainDefinition } from 'apollo-utilities'\n// Utilities\nimport config from './utilities/config'\n// Components\nimport App from './App'\n\nconst wslink = new WebSocketLink({\n  uri: config.wsUrl,\n  options: { reconnect: true }\n})\n\nconst httpLink = createHttpLink({\n  uri: config.httpUrl\n})\n\nconst authLink = setContext((_, { headers }) => {\n  const token = JSON.parse(localStorage.getItem('kaste-user-token'))\n  console.log('token', token)\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token.value}` : null\n    }\n  }\n})\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return kind === 'OperationDefinition' && operation === 'subscription'\n  },\n  wslink,\n  authLink.concat(httpLink),\n)\n\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n})\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n  , document.getElementById('root'))"],"sourceRoot":""}