{"version":3,"sources":["components/MobileContainer.js","components/DesktopContainer.js","components/ResponsiveLayout.js","graphql/mutations/loginUser.js","hooks/index.js","components/LoginView.js","components/SensorView.js","graphql/queries/chatMessages.js","graphql/mutations/createMessage.js","components/ChatMessage.js","components/Loading.js","utilities/helperFuncs.js","components/ChatView.js","components/AboutView.js","App.js","index.js"],"names":["MobileContainer","_ref","children","setPage","logOut","_useState","useState","_useState2","Object","slicedToArray","recentlyWatered","setRecentlyWatered","_useState3","_useState4","showSidebar","setShowSidebar","handleViewChange","view","react_default","a","createElement","Fragment","Responsive","maxWidth","onlyMobile","as","Sidebar","Pushable","style","minHeight","Menu","animation","inverted","onHide","vertical","visible","icon","width","Item","onClick","Icon","name","disabled","console","log","setTimeout","Pusher","dimmed","Segment","textAlign","padding","pointing","secondary","color","size","position","Button","primary","DesktopContainer","minWidth","onlyTablet","ResponsiveLayout","components_MobileContainer","components_DesktopContainer","loginUser","gql","_templateObject","useNotification","duration","arguments","length","undefined","text","setText","LoginView","setToken","login","useMutation","_useNotification","_useNotification2","notification","setNotification","username","setUsername","password","setPassword","handleLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","result","token","wrap","_context","prev","next","variables","sent","data","localStorage","setItem","JSON","stringify","t0","graphQLErrors","message","stop","apply","this","className","Grid","height","background","verticalAlign","Column","Header","dividing","Form","onSubmit","stacked","raised","Input","type","value","onChange","_ref3","target","fluid","iconPosition","placeholder","_ref4","Message","negative","SensorView","show","chatMessages","chatMessages_templateObject","createMessage","createMessage_templateObject","ChatMessage","Comment","Content","Author","user","Metadata","Date","parseInt","created","toUTCString","marginTop","compact","content","Loading","Dimmer","active","Loader","includedIn","set","object","map","p","id","includes","ChatView","_useQuery","useQuery","loading","messageInput","setMessageInput","client","useApolloClient","addMessage","update","store","response","messageData","readQuery","query","addedMessage","messages","push","writeQuery","handleSubmit","Container","components_Loading","Group","components_ChatMessage","key","onKeyPress","AboutView","Table","App","page","parse","getItem","components_ResponsiveLayout","removeItem","components_SensorView","components_ChatView","components_AboutView","components_LoginView","wslink","WebSocketLink","uri","options","reconnect","httpLink","createHttpLink","authLink","setContext","_","headers","objectSpread","authorization","concat","link","split","_getMainDefinition","getMainDefinition","kind","operation","ApolloClient","cache","InMemoryCache","ReactDOM","render","ApolloContext","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.16353633.chunk.js","sourcesContent":["// Libraries\nimport React, { useState } from 'react'\nimport { Responsive, Sidebar, Menu, Icon, Segment, Button } from 'semantic-ui-react'\n\nconst MobileContainer = ({ children, setPage, logOut }) => {\n  const [recentlyWatered, setRecentlyWatered] = useState(false)\n  const [showSidebar, setShowSidebar] = useState(false)\n\n  const handleViewChange = (view) => () => {\n    setShowSidebar(false)\n    setPage(view)\n  }\n\n  const handleWatering = () => {\n    setRecentlyWatered(true)\n    console.log('Watering plants plants')\n    setTimeout(() => {\n      setRecentlyWatered(false)\n      console.log('Watering completed')\n\n    }, 5000)\n  }\n\n  return (\n    <>\n      <Responsive\n        maxWidth={Responsive.onlyMobile.maxWidth}\n        as={Sidebar.Pushable}\n        style={{ minHeight: '100vh' }}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          inverted\n          onHide={() => setShowSidebar(false)}\n          vertical\n          visible={showSidebar}\n          icon='labeled'\n          width='thin'\n        >\n          <Menu.Item onClick={handleViewChange('SensorView')}>\n            <Icon name='info' />\n            Sensors\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('ChatView')}>\n            <Icon name='comments outline' />\n            Chat\n          </Menu.Item>\n          <Menu.Item disabled={recentlyWatered} onClick={handleWatering}>\n            <Icon name='exclamation' />\n            Water plants\n          </Menu.Item>\n          <Menu.Item onClick={() => console.log('Reboot rasp')\n          }>\n            <Icon name='redo' />\n            Reboot rasp\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('AboutView')}>\n            <Icon name='question' />\n            About\n          </Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={showSidebar}>\n          <Segment\n            inverted\n            textAlign='center'\n            style={{ padding: '0em 0em' }}\n            vertical>\n\n            <Menu inverted pointing secondary color='green' size='large'>\n              <Menu.Item onClick={() => setShowSidebar(true)}>\n                <Icon name='sidebar' />\n              </Menu.Item>\n              <Menu.Item position='right' onClick={() => logOut(false)}>\n                <Button primary>\n                  log out\n                    </Button>\n              </Menu.Item>\n            </Menu>\n          </Segment>\n\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    </>\n  )\n}\n\nexport default MobileContainer","// Libraries\nimport React, { useState } from 'react'\nimport { Responsive, Menu, Icon } from 'semantic-ui-react'\n\nconst DesktopContainer = ({ children, setPage, logOut }) => {\n  const [recentlyWatered, setRecentlyWatered] = useState(false)\n\n  // Handles sidebar navigation\n  const handleViewChange = (view) => () => {\n    setPage(view)\n  }\n\n  const handleWatering = () => {\n    setRecentlyWatered(true)\n    console.log('Watering plants plants')\n    setTimeout(() => {\n      setRecentlyWatered(false)\n      console.log('Watering completed')\n      \n    }, 5000)\n\n  }\n\n  return (\n    <>\n      <Responsive\n        minWidth={Responsive.onlyTablet.minWidth}\n      >\n        <Menu\n          inverted\n          icon='labeled'\n          color='green'\n        >\n          <Menu.Item onClick={handleViewChange('SensorView')}>\n            <Icon name='info' />\n            Sensors\n          </Menu.Item>\n          <Menu.Item onClick={handleViewChange('ChatView')}>\n            <Icon name='comments outline' />\n            Chat\n          </Menu.Item>\n          <Menu.Item disabled={recentlyWatered} onClick={handleWatering}>\n            <Icon name='exclamation' />\n            Water plants\n          </Menu.Item>\n          <Menu.Item onClick={() => console.log('Reboot rasp')}>\n            <Icon name='redo' />\n            Reboot rasp\n          </Menu.Item>\n          <Menu.Menu position='right'>\n            <Menu.Item onClick={handleViewChange('AboutView')}>\n              <Icon name='question' />\n              About\n          </Menu.Item>\n            <Menu.Item onClick={() => logOut(false)}>\n              <Icon name='log out' />\n              Log out\n          </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        {children}\n      </Responsive>\n    </>\n  )\n}\n\nexport default DesktopContainer","// Libraries\nimport React from 'react'\n\n// Components\nimport MobileContainer from './MobileContainer'\nimport DesktopContainer from './DesktopContainer'\n\nconst ResponsiveLayout = ({ children, setPage, logOut }) => {\n\n  return (\n    <>\n      <MobileContainer \n      logOut={logOut}\n      setPage={setPage}>\n        {children}\n      </MobileContainer>\n\n      <DesktopContainer\n      logOut={logOut}\n      setPage={setPage}>\n        {children}\n      </DesktopContainer>\n    </>\n  )\n}\n\nexport default ResponsiveLayout","import { gql } from 'apollo-boost'\n\nconst loginUser = gql`\nmutation loginUser(\n  $password: String!\n  $username: String!\n  ) {\n  login(\n    password: $password\n    username: $username\n  ) {\n    value\n    username\n  }\n}\n`\n\nexport default loginUser","import { useState } from 'react'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n    reset\n  }\n}\n\n// Provide duration as argument (seconds)\nexport const useNotification = (duration = 5) => {\n  const [text, setText] = useState(null)\n\n  const reset = () => setText(null)\n\n  const set = (text) => {\n    setText(text)\n    setTimeout(() => {\n      reset()\n    }, duration * 1000)\n  }\n\n  return [text, set]\n}","// Libraries\nimport React, { useState } from 'react'\nimport { Message, Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\nimport { useMutation } from 'react-apollo-hooks'\nimport { gql } from 'apollo-boost'\n// Typedefs\nimport loginUser from '../graphql/mutations/loginUser'\n// Hooks\nimport { useNotification } from '../hooks/index'\n\n\nconst LoginView = ({ setToken }) => {\n  const login = useMutation(loginUser)\n  const [notification, setNotification] = useNotification()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async () => {\n    try {\n      const result = await login({\n        variables: {\n          username, password\n        }\n      })\n\n      const token = result.data.login\n      console.log('token', token)\n      setToken(token)\n      localStorage.setItem('kaste-user-token', JSON.stringify(token))\n\n    } catch (error) {\n      setNotification(error.graphQLErrors[0].message)\n    }\n  }\n\n  return (\n    <div className='login-form'>\n      <style> {`\n  body > div,\n  body > div > div,\n  body > div > div > div.login-form {\n    height: 100%;\n  }\n          `}\n      </style>\n      <Grid textAlign='center' style={{ height: '100%', background: 'lightgreen' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 250 }}>\n          <Header as='h1' color='grey' dividing textAlign='center'>\n            Log in to Kaste 2.0\n          </Header>\n          <Form size='large' onSubmit={handleLogin}>\n            <Segment stacked raised>\n              <Form.Input\n                type=\"text\"\n                value={username}\n                onChange={({ target }) => setUsername(target.value)}\n                fluid\n                icon='user'\n                iconPosition='left'\n                placeholder='Username'\n              />\n              <Form.Input\n                type=\"password\"\n                value={password}\n                onChange={({ target }) => setPassword(target.value)}\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n              />\n\n              <Button color='brown' size='large' type='submit'>\n                Log in\n              </Button>\n            </Segment>\n            {notification &&\n              <Message negative>\n                {notification}\n              </Message>\n            }\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\n\nexport default LoginView","// Libraries\nimport React from 'react'\n\nconst SensorView = ({show}) => {\n\n  if (!show) {\n    return null\n  }\n\n  return (\n  <p>SENSORVIEW</p>\n)\n}\n\nexport default SensorView","import { gql } from 'apollo-boost'\n\nconst chatMessages = gql`\n{\n  messages {\n    content\n    created\n    id\n    user {\n      name\n    }\n  }\n}\n`\n\nexport default chatMessages","import { gql } from 'apollo-boost'\n\nconst createMessage = gql`\nmutation createMessage(\n  $content: String!\n  ) {\n  createMessage(\n    content: $content\n  ) {\n    content\n    user {\n      name\n    }\n    created\n    id\n  }\n}\n`\n\nexport default createMessage","// Libraries\nimport React from 'react'\nimport { Segment,  Comment } from 'semantic-ui-react'\n\nconst ChatMessage = ({ message }) => (\n\n  <Comment>\n    <Comment.Content>\n      <Comment.Author as='a'>\n        {message.user.name}\n      </Comment.Author>\n      <Comment.Metadata>\n        <div>{new Date(parseInt(message.created)).toUTCString()}</div>\n      </Comment.Metadata>\n      <Segment style={{marginTop: 0, padding: 7}} compact inverted color='green' secondary>\n          {message.content}\n      </Segment>\n    </Comment.Content>\n  </Comment>\n)\n\nexport default ChatMessage","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\nconst Loading = () => (\n    <Dimmer active inverted>\n      <Loader size='massive' inverted>Loading</Loader>\n    </Dimmer>\n)\n\nexport default Loading","export const includedIn = (set, object) =>\n  set.map(p => p.id).includes(object.id)\n\nexport default { includedIn }","// Libraries\nimport React, { useState } from 'react'\nimport { Form, Button, Container, Comment, Header, Menu, Input } from 'semantic-ui-react'\nimport { useQuery, useMutation, useApolloClient } from 'react-apollo-hooks'\n// TypeDefs\nimport chatMessages from '../graphql/queries/chatMessages'\nimport createMessage from '../graphql/mutations/createMessage'\n// Components\nimport ChatMessage from './ChatMessage'\nimport Loading from './Loading'\n// Helper functions\nimport { includedIn } from '../utilities/helperFuncs'\n\nconst ChatView = ({ show }) => {\n  const { data, loading } = useQuery(chatMessages)\n  const [messageInput, setMessageInput] = useState('')\n\n  const client = useApolloClient()\n\n  const addMessage = useMutation(createMessage, {\n    update: (store, response) => {\n\n      const messageData = store.readQuery({ query: chatMessages })\n      const addedMessage = response.data.createMessage\n      console.log('messageData', messageData)\n      if (!includedIn(messageData.messages, addedMessage.id)) {\n        messageData.messages.push(addedMessage)\n        console.log('1')\n        // ERRORIA HEITTÄÄ\n        client.writeQuery({\n          query: chatMessages,\n          data: messageData,\n          id: 1\n        })\n        console.log('2')\n      }\n\n    }\n  })\n\n  // Prevents empty messages\n  const handleSubmit = () => {\n    if (messageInput.length < 1) {\n      return\n    }\n\n    addMessage({\n      variables: {\n        \"content\": messageInput\n      }\n    })\n\n    setMessageInput('')\n  }\n\n  if (!show) {\n    return null\n  }\n\n  return (\n    <div >\n      <Container>\n        {\n          loading\n            ?\n            <Loading />\n            :\n            <Comment.Group>\n              <Header textAlign='center' as='h3' dividing>\n                Chat\n            </Header>\n              {data.messages.map(message => (\n                <ChatMessage\n                  key={message.id}\n                  message={message}\n                />\n              ))}\n            </Comment.Group>\n        }\n      </Container>\n      <Menu fluid color='grey'>\n        <Menu.Item style={{ width: '70%' }}>\n          <Input\n            fluid\n            value={messageInput}\n            onChange={({ target }) => setMessageInput(target.value)}\n            onKeyPress={({key}) => {\n              if (key === 'Enter') {\n                handleSubmit()\n              }\n            }}\n            />\n        </Menu.Item>\n        <Menu.Item position='right'>\n          <Button primary type='submit' onClick={handleSubmit}>\n            Send\n        </Button>\n        </Menu.Item>\n      </Menu>\n    </div>\n  )\n}\n\nexport default ChatView\n","// Libraries\nimport React from 'react'\nimport { Table, Container, Header } from 'semantic-ui-react'\n\nconst AboutView = ({ show }) => {\n\n  if (!show) {\n    return null\n  }\n\n  return (\n    <Container textAlign='center'>\n      <Header as='h1' style={{ padding: 25 }}>\n        About Kaste 2.0\n      </Header>\n      <Table style={{ background: 'lightgreen' }}>\n        <tbody>\n          <tr>\n            <td>Aim:</td>\n            <td>Design and implement a responsive web app to monitor and water plants.</td>\n          </tr>\n          <tr>\n            <td>Features:</td>\n            <td>\n              <ul>\n                <li>Plantwatering functionality for two or more users</li>\n                <li>Possibility to read plant info through charts</li>\n                <li>Simple chat</li>\n                <li>Rebooting Raspberry (that controls sensor data)</li>\n              </ul>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\n\nexport default AboutView","// Libraries\nimport React, { useState, useEffect } from 'react'\n\n// Components\nimport ResponsiveLayout from './components/ResponsiveLayout'\nimport LoginView from './components/LoginView'\nimport SensorView from './components/SensorView'\nimport ChatView from './components/ChatView'\nimport AboutView from './components/AboutView'\n\nconst App = () => {\n  const [page, setPage] = useState('SensorView')\n  const [token, setToken] = useState(JSON.parse(localStorage.getItem('kaste-user-token')))\n\n  const logOut = () => {\n    setToken(null)\n    localStorage.removeItem('kaste-user-token')\n  }\n\n  return (\n    <>\n      {!token\n        ?\n        <LoginView\n          setToken={setToken} />\n        :\n        <ResponsiveLayout\n          setPage={setPage}\n          logOut={logOut}\n        >\n\n          <SensorView\n            show={page === 'SensorView'}\n          />\n\n          <ChatView\n            show={page === 'ChatView'}\n          />\n\n          <AboutView\n            show={page === 'AboutView'}\n          />\n\n        </ResponsiveLayout>\n      }\n    </>\n  )\n}\n\nexport default App;\n\n","//Libraries\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloProvider } from 'react-apollo-hooks'\n// ...Because of authorization for headers (instead of apollo-boost)\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n// ...For Subscriptions (websocket)\nimport { split } from 'apollo-link'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { getMainDefinition } from 'apollo-utilities'\n// Components\nimport App from './App'\n\nconst wslink = new WebSocketLink({\n  uri: `/graphql`,\n  options: { reconnect: true }\n})\n\nconst httpLink = createHttpLink({\n  uri: '/graphql'\n})\n\nconst authLink = setContext((_, { headers }) => {\n  const token = JSON.parse(localStorage.getItem('kaste-user-token'))\n  console.log('token', token)\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token.value}` : null\n    }\n  }\n})\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return kind === 'OperationDefinition' && operation === 'subscription'\n  },\n  wslink,\n  authLink.concat(httpLink),\n)\n\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n})\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n  , document.getElementById('root'))"],"sourceRoot":""}